<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ESP-C3 on kurisaW</title><link>https://kurisaw.github.io/tags/esp-c3/</link><description>Recent content in ESP-C3 on kurisaW</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 19 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://kurisaw.github.io/tags/esp-c3/index.xml" rel="self" type="application/rss+xml"/><item><title>【Matter】如何在Linux平台下测试Matter应用级通信（虚拟设备）</title><link>https://kurisaw.github.io/p/matter%E5%A6%82%E4%BD%95%E5%9C%A8linux%E5%B9%B3%E5%8F%B0%E4%B8%8B%E6%B5%8B%E8%AF%95matter%E5%BA%94%E7%94%A8%E7%BA%A7%E9%80%9A%E4%BF%A1%E8%99%9A%E6%8B%9F%E8%AE%BE%E5%A4%87/</link><pubDate>Mon, 19 Jun 2023 00:00:00 +0000</pubDate><guid>https://kurisaw.github.io/p/matter%E5%A6%82%E4%BD%95%E5%9C%A8linux%E5%B9%B3%E5%8F%B0%E4%B8%8B%E6%B5%8B%E8%AF%95matter%E5%BA%94%E7%94%A8%E7%BA%A7%E9%80%9A%E4%BF%A1%E8%99%9A%E6%8B%9F%E8%AE%BE%E5%A4%87/</guid><description>&lt;img src="https://kurisaw.github.io/p/matter%E5%A6%82%E4%BD%95%E5%9C%A8linux%E5%B9%B3%E5%8F%B0%E4%B8%8B%E6%B5%8B%E8%AF%95matter%E5%BA%94%E7%94%A8%E7%BA%A7%E9%80%9A%E4%BF%A1%E8%99%9A%E6%8B%9F%E8%AE%BE%E5%A4%87/cover.jpg" alt="Featured image of post 【Matter】如何在Linux平台下测试Matter应用级通信（虚拟设备）" />&lt;h1 id="如何在linux平台下测试matter应用级通信虚拟设备">如何在Linux平台下测试Matter应用级通信(虚拟设备)
&lt;/h1>&lt;hr>
&lt;h2 id="准备工作">准备工作
&lt;/h2>&lt;h3 id="1-递归克隆matter仓库">1. 递归克隆Matter仓库
&lt;/h3>&lt;p>执行如下命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone --recurse-submodules git@github.com:project-chip/connectedhomeip.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果克隆过程中发生报错，请执行如下命令来同步子模块：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git submodule update --init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>由于我们的环境构建配置均是基于Matter1.0，所以我们需要切换到v1.0分支下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git checkout v1.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2-matter依赖项安装">2. Matter依赖项安装
&lt;/h3>&lt;p>Matter 构建依赖于以下软件包及环境库：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt-get install git gcc g++ pkg-config libssl-dev libdbus-1-dev &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> libglib2.0-dev libavahi-client-dev ninja-build python3-venv python3-dev &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> python3-pip unzip libgirepository1.0-dev libcairo2-dev libreadline-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果通过&lt;code> build_examples.py&lt;/code> 和 &lt;code>-with-ui&lt;/code> 变体进行构建，也要安装 SDL2：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt-get install libsdl2-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3-matter环境构建">3. Matter环境构建
&lt;/h3>&lt;p>执行&lt;code>scripts/activate.sh&lt;/code>脚本。该脚本负责下载 GN、ninja，并使用用于构建和测试的库设置 Python 环境。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> scripts/activate.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/kurisaW/picbed/img2023/202306190833624.png"
loading="lazy"
alt="image-20230619083303148"
>&lt;/p>
&lt;p>如果显示环境已过期可执行如下命令进行更新（一般如果没提示环境已过期的提示不建议执行这一步，编译会花一段时间）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> scripts/bootstrap.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="4-安装zap">4. 安装zap
&lt;/h3>&lt;blockquote>
&lt;p>注意：zap 包目前不可用&lt;code>arm64&lt;/code>（比如在 Raspberry PI 上编译时）。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>**Step1：ZAP需要Node.js来运行，请先确保你的计算机上已经安装了Node.js。**可以使用以下命令：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">node -v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果安装的话不出意外会出现版本号。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Step2：zap安装&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> connectedhomeip/scripts/tools/zap
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">python3 zap_download.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>下面是安装日志：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">root@kurisaw-virtual-machine:/home/kurisaw/Desktop/esp/esp-gitee-tools/esp-matter/connectedhomeip/connectedhomeip/scripts/tools/zap# python3 zap_download.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-06-19 13:28:22 root INFO Found required zap version to be: v2023.04.27-nightly
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-06-19 13:28:22 root INFO Fetching: https://github.com/project-chip/zap/releases/download/v2023.04.27-nightly/zap-linux.zip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-06-19 13:29:20 root INFO Data downloaded, extracting ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-06-19 13:29:25 root INFO Done extracting.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">ZAP_INSTALL_PATH&lt;/span>&lt;span class="o">=&lt;/span>/home/kurisaw/Desktop/esp/esp-gitee-tools/esp-matter/connectedhomeip/connectedhomeip/.zap/zap-v2023.04.27-nightly
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;strong>Step3：配置zap环境变量&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>我们看上面 zap 安装日志，其中最后导出了zap 的安装路径为&lt;code>/home/kurisaw/Desktop/esp/esp-gitee-tools/esp-matter/connectedhomeip/connectedhomeip/.zap/zap-v2023.04.27-nightly&lt;/code>，在此目录下有个 zap 脚本，我们这个位置一定要记住！！&lt;/p>
&lt;p>设置&lt;code>ZAP_DEVELOPMENT_PATH&lt;/code>环境变量（这里的路径需要根据上面安装zap后提示的路径进行设置，不能一昧照抄）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">ZAP_DEVELOPMENT_PATH&lt;/span>&lt;span class="o">=&lt;/span>/home/kurisaw/Desktop/esp/esp-gitee-tools/esp-matter/connectedhomeip/connectedhomeip/.zap/zap-v2023.04.27-nightly
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;strong>Step4：运行zap引导程序&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>执行如下代码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">./run_zaptool.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>效果如下：&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/kurisaW/picbed/img2023/202306191346155.png"
loading="lazy"
alt="image-20230619134658521"
>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Step4：为了方便我们后续使用zap，我们设置root终端下自启动：&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo su
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vi ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在&lt;code>.bashrc&lt;/code>文件最末添加如下代码，也就是配置zap环境变量&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">ZAP_DEVELOPMENT_PATH&lt;/span>&lt;span class="o">=&lt;/span>/home/kurisaw/Desktop/esp/esp-gitee-tools/esp-matter/connectedhomeip/connectedhomeip/.zap/zap-v2023.04.27-nightly
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>保存退出！&lt;/p>
&lt;h2 id="应用程序构建">应用程序构建
&lt;/h2>&lt;p>在官方文档中提供有两种构建方式：&lt;/p>
&lt;ul>
&lt;li>通过脚本构建&lt;/li>
&lt;li>使用 Gn 和 Ninja 命令构建&lt;/li>
&lt;/ul>
&lt;h3 id="1-通过脚本构建">1. 通过脚本构建
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">./build_script.sh EXAMPLE_DIR OUTPUT_DIR &lt;span class="o">[&lt;/span>ARGUMENTS&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;code>build_script.sh&lt;/code> 是脚本的文件名；&lt;/li>
&lt;li>&lt;code>EXAMPLE_DIR&lt;/code> 是示例项目的目录路径；&lt;/li>
&lt;li>&lt;code>OUTPUT_DIR&lt;/code> 是构建输出的目录路径；&lt;/li>
&lt;li>&lt;code>[ARGUMENTS]&lt;/code> 是可选的其他参数，用于设置gn和ninja命令的选项。&lt;/li>
&lt;/ul>
&lt;h4 id="11-构建示例">1.1 构建示例
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">./scripts/examples/gn_build_example.sh examples/placeholder/linux out/debug/simulated/ &lt;span class="nv">chip_tests_zap_config&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>app1&lt;span class="se">\&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/kurisaW/picbed/img2023/202306190835972.png"
loading="lazy"
alt="image-20230619083551820"
>&lt;/p>
&lt;h4 id="12-运行构建">1.2 运行构建
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">./out/simulated/chip-app1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/kurisaW/picbed/img2023/202306190843752.png"
loading="lazy"
alt="image-20230619084309631"
>&lt;/p>
&lt;h3 id="2-通过-gn-和-ninja-构建应用程序">2. 通过 gn 和 ninja 构建应用程序
&lt;/h3>&lt;h4 id="21-构建示例">2.1 构建示例
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> scripts/activate.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gn gen --check --root&lt;span class="o">=&lt;/span>examples/placeholder/linux out/simulated --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;chip_tests_zap_config=\&amp;#34;app1\&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ninja -C out/simulated
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="22-运行构建">2.2 运行构建
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./out/app1/chip-app1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/kurisaW/picbed/img2023/202306191510937.png"
loading="lazy"
alt="image-20230619151054483"
>&lt;/p>
&lt;h2 id="测试应用程序">测试应用程序
&lt;/h2>&lt;p>在前面的应用程序构建那一节中我们已经完成了应用程序的构建并且成功运行了构建，同时我们在日志中也可以看到生成了QR码的链接，我们将其复制到浏览器打开即可得到二维码&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/kurisaW/picbed/img2023/202306191513515.png"
loading="lazy"
alt="image-20230619151353417"
>&lt;/p>
&lt;p>我们使用chip tool结合生成的QR码进行调试，重新打开一个终端，使用默认的chip tool工具（记住不是之前构建应用程序生成的chip tool），通过QR码可以快捷迅速地将虚拟设备添加到网络中，我们使用chip tool对设备进行调试：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> out/debug
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./chip-tool onoff on 0x654321 &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./chip-tool onoff off 0x654321 &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./chip-tool onoff &lt;span class="nb">read&lt;/span> accepted-command-list 0x654321 &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./chip-tool onoff &lt;span class="nb">read&lt;/span> on-time 0x654321 &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/kurisaW/picbed/img2023/202306191530858.png"
loading="lazy"
alt="image-20230619153015727"
>&lt;/p>
&lt;p>具体更多的使用命令可参考：&lt;a class="link" href="https://github.com/project-chip/connectedhomeip/blob/master/examples/chip-tool/README.md" target="_blank" rel="noopener"
>Chip tool&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="参考">参考
&lt;/h2>&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/project-chip/connectedhomeip/blob/master/docs/guides/simulated_device_linux.md" target="_blank" rel="noopener"
>simulated_device_linux&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/project-chip/zap" target="_blank" rel="noopener"
>zap&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>【Matter】使用chip-tool在ESP32-C3上进行matter开发</title><link>https://kurisaw.github.io/p/matter%E4%BD%BF%E7%94%A8chip-tool%E5%9C%A8esp32-c3%E4%B8%8A%E8%BF%9B%E8%A1%8Cmatter%E5%BC%80%E5%8F%91/</link><pubDate>Tue, 30 May 2023 00:00:00 +0000</pubDate><guid>https://kurisaw.github.io/p/matter%E4%BD%BF%E7%94%A8chip-tool%E5%9C%A8esp32-c3%E4%B8%8A%E8%BF%9B%E8%A1%8Cmatter%E5%BC%80%E5%8F%91/</guid><description>&lt;img src="https://kurisaw.github.io/p/matter%E4%BD%BF%E7%94%A8chip-tool%E5%9C%A8esp32-c3%E4%B8%8A%E8%BF%9B%E8%A1%8Cmatter%E5%BC%80%E5%8F%91/cover.jpg" alt="Featured image of post 【Matter】使用chip-tool在ESP32-C3上进行matter开发" />&lt;h1 id="使用chip-tool在esp32-c3上进行matter开发">使用chip tool在ESP32-C3上进行matter开发
&lt;/h1>&lt;hr>
&lt;h2 id="前提准备">前提准备
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>请确保你已经能够完成在esp-matter下的应用程序的烧录及串口监视，可参考此博客&lt;a class="link" href="https://blog.csdn.net/qq_56914146/article/details/130519043?spm=1001.2014.3001.5501" target="_blank" rel="noopener"
>【Matter】esp-matter环境下的应用实践（程序烧录及串口监视）&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ubuntu最好使用20以上的版本，因为matter最低需要python3.8的环境&lt;/p>
&lt;/li>
&lt;li>
&lt;p>PC机需要支持蓝牙4.0及以上版本，如果没有的话需要购买一个USB蓝牙适配器，而且需要支持Linux，可以参考购买这款&lt;a class="link" href="https://m.tb.cn/h.UvoJzj4?tk=KpYpdNFRueB" target="_blank" rel="noopener"
>蓝牙适配器&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="编译-chip-tool">编译 chip-tool
&lt;/h2>&lt;h3 id="1激活esp-matter环境">1.激活esp-matter环境
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cd&lt;/span> &lt;span class="n">esp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">idf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">export&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sh&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cd&lt;/span> &lt;span class="n">esp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">matter&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">export&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sh&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2编译matter所需环境">2.编译matter所需环境
&lt;/h3>&lt;ul>
&lt;li>step1：首先安装编译所需的依赖包：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt-get install git gcc g++ pkg-config libssl-dev libdbus-1-dev libglib2.0-dev libavahi-client-dev ninja-build python3-venv python3-dev python3-pip unzip libgirepository1.0-dev libcairo2-dev libreadline-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>step2：切换到 /matter/connectedhomeip/connectedhomeip 目录下，编译matter环境（如果没显示环境过期，这一步可跳过）&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 运行引导程序，该脚本负责下载 GN、ninja，并使用用于构建和测试的库设置 Python 环境。如果此脚本显示环境已过期，则可以通过运行以下命令进行更新&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> scripts/bootstrap.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>对于 MacOS，&lt;code>gdbgui&lt;/code>python 包不会使用&lt;code>bootstrap.sh&lt;/code> 脚本安装，因为它仅限于 x64 Linux 平台。它受到限制，因为在 MacOS 上为&lt;code>gevent&lt;/code>（依赖于&lt;code>gdbgui&lt;/code>）构建轮子失败。&lt;/p>
&lt;p>对于ARM-based Mac，如果Python3版本大于或等于3.11，则不需要进一步的安装步骤。&lt;/p>
&lt;p>如果 Python3 版本低于 3.11 或者您使用的是 x86（基于英特尔）Mac，那么请在每次引导后运行以下命令以将 gdbgui wheels 安装为二进制文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">python3&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="n">pip&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="n">scripts&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">setup&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">constraints&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">txt&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">no&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cache&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">prefer&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">binary&lt;/span> &lt;span class="n">gdbgui&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="mf">0.13&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mf">2.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">deactivate&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/blockquote>
&lt;ul>
&lt;li>step3：激活编译matter环境&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">source&lt;/span> &lt;span class="n">scripts&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">activate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sh&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>step4：启用 Ccache 以加快 IDF 构建速度&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="err">$&lt;/span> &lt;span class="n">export&lt;/span> &lt;span class="n">IDF_CCACHE_ENABLE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3构建chip-tool">3.构建CHIP TOOL
&lt;/h3>&lt;p>在 &lt;code>~/esp/esp-matter/connectedhomeip/connectedhomeip&lt;/code>目录下，执行命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">./gn_build.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305041738527.png"
loading="lazy"
alt="image-20230504173815084"
>&lt;/p>
&lt;p>执行完之后，会在根目录下生成 &lt;code>out/debug/standalone/chip-tool&lt;/code>一个二进制文件。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305041740040.png"
loading="lazy"
alt="image-20230504174038993"
>&lt;/p>
&lt;p>如果上述命令：&lt;code>./gn_build.sh&lt;/code>执行失败，也可以执行如下命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">scripts&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">examples&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">gn_build_example&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sh&lt;/span> &lt;span class="n">examples&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">chip&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tool&lt;/span> &lt;span class="n">SOME&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">PATH&lt;/span>&lt;span class="o">/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305041756762.png"
loading="lazy"
alt="image-20230504175634584"
>&lt;/p>
&lt;p>执行完毕后，在以下路径 &lt;code>connetedhomeip/connectedhomeip/SOME-PATH&lt;/code>也可以发现生成了 chip-tool 工具&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305041757853.png"
loading="lazy"
alt="image-20230504175700807"
>&lt;/p>
&lt;h2 id="chip-tool-client-调试设备说明">chip-tool client 调试设备说明
&lt;/h2>&lt;p>为了向设备发送命令，必须使用客户端对其进行调试。芯片工具目前&lt;strong>一次只支持调试和记忆一个设备&lt;/strong>。配置状态存储在/tmp/chip_tool_config.ini中；&lt;/p>
&lt;p>另外删除/tmp中的此文件和其他.ini文件有时可以解决由于过时配置导致的问题。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># 获取受支持集群的列表
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nl">Usage&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">chip&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tool&lt;/span> &lt;span class="n">cluster_name&lt;/span> &lt;span class="n">command_name&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">param1&lt;/span> &lt;span class="n">param2&lt;/span> &lt;span class="p">...]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">+-------------------------------------------------------------------------------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|&lt;/span> &lt;span class="nl">Clusters&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">+-------------------------------------------------------------------------------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">barriercontrol&lt;/span> &lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">basic&lt;/span> &lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">colorcontrol&lt;/span> &lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">doorlock&lt;/span> &lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">groups&lt;/span> &lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">iaszone&lt;/span> &lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">identify&lt;/span> &lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">levelcontrol&lt;/span> &lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">onoff&lt;/span> &lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pairing&lt;/span> &lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">payload&lt;/span> &lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">scenes&lt;/span> &lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">|&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">temperaturemeasurement&lt;/span> &lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">+-------------------------------------------------------------------------------------+&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305041800372.png"
loading="lazy"
alt="image-20230504180042312"
>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>有关具体其他命令和使用方法详见 : &lt;a class="link" href="https://github.com/project-chip/connectedhomeip/tree/v1.0-branch/examples/chip-tool" target="_blank" rel="noopener"
>https://github.com/project-chip/connectedhomeip/tree/v1.0-branch/examples/chip-tool&lt;/a>&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>要向设备发起客户端调试请求，需要运行构建的可执行文件并选择配对模式，具体操作如下：&lt;/p>
&lt;h3 id="1基于-ble-调试">1.基于 BLE 调试
&lt;/h3>&lt;p>运行构建的可执行文件并将远程设备的鉴别器和配对代码以及要使用的网络凭据传递给它。下面的命令使用硬编码到 ESP32 all-clusters-app 调试版本中的默认值来将其调试到 Wi-Fi 网络：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">chip&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tool&lt;/span> &lt;span class="n">pairing&lt;/span> &lt;span class="n">ble&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">wifi&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">NODE_ID_TO_ASSIGN&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">SSID&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">PASSWORD&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="mi">20202021&lt;/span> &lt;span class="mi">3840&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;code>${NODE_ID_TO_ASSIGN}&lt;/code>（必须是十进制数或&lt;code>0x&lt;/code>- 前缀的十六进制数）是要分配给正在调试的节点的节点 ID。&lt;/li>
&lt;li>&lt;code>${SSID} 是 Wi-Fi SSID&lt;/code> 可以是字符串，也可以是&lt;code>hex:XXXXXXXX&lt;/code> SSID 的字节被编码为两位十六进制数字的形式。&lt;/li>
&lt;li>&lt;code>${PASSWORD}&lt;/code> 是 Wi-Fi 密码，同样是字符串或十六进制数据&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># 例如
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">chip&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tool&lt;/span> &lt;span class="n">pairing&lt;/span> &lt;span class="n">ble&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">wifi&lt;/span> &lt;span class="mh">0x7283&lt;/span> &lt;span class="n">jetbot&lt;/span> &lt;span class="n">jetbotwyq&lt;/span> &lt;span class="mi">202021&lt;/span> &lt;span class="mi">3840&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2通过ip与设备配对">2.通过IP与设备配对
&lt;/h3>&lt;p>下面的命令将发现设备并尝试使用提供的设置代码与它发现的第一个设备配对。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">chip&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">tool&lt;/span> &lt;span class="n">pairing&lt;/span> &lt;span class="n">onnetwork&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">NODE_ID_TO_ASSIGN&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="mi">20202021&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>下面的命令将发现具有长鉴别器 3840 的设备，并尝试使用提供的设置代码与它发现的第一个设备配对。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">chip&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">tool&lt;/span> &lt;span class="n">pairing&lt;/span> &lt;span class="n">onnetwork&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">long&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">NODE_ID_TO_ASSIGN&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="mi">20202021&lt;/span> &lt;span class="mi">3840&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>下面的命令将根据给定的二维码（哪些设备在启动时记录）发现设备，并尝试与它发现的第一个配对。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">chip&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">tool&lt;/span> &lt;span class="n">pairing&lt;/span> &lt;span class="n">code&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">NODE_ID_TO_ASSIGN&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="n">MT&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="c1">#######&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在所有这些情况下，将为设备分配节点 ID &lt;code>${NODE_ID_TO_ASSIGN}&lt;/code> （必须是十进制数或以 0x 为前缀的十六进制数）。&lt;/p>
&lt;h3 id="3trust-store">3.Trust store
&lt;/h3>&lt;p>Trust store 将使用默认的 Test Attestation PAA 自动创建。要使用不同的 PAA 集，请在运行构建的可执行文件时使用可选参数 &amp;ndash;paa-trust-store-path 传递路径。受信任的 PAA 位于 credentials/development/paa-root-certs/。&lt;/p>
&lt;p>下面的命令将选择一组受信任的 PAA，以在证明验证期间使用。它还会发现具有长鉴别器 3840 的设备，并尝试使用提供的设置代码与它发现的第一个设备配对。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">chip&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">tool&lt;/span> &lt;span class="n">pairing&lt;/span> &lt;span class="n">onnetwork&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">long&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">NODE_ID_TO_ASSIGN&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="mi">20202021&lt;/span> &lt;span class="mi">3840&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">paa&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">trust&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">store&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">path&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">to&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">PAAs&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="4忘记当前委托的设备">4.忘记当前委托的设备
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">chip&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tool&lt;/span> &lt;span class="n">pairing&lt;/span> &lt;span class="n">unpair&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使用chip-tool点灯">使用chip-tool点灯
&lt;/h2>&lt;h3 id="1matter环境激活">1.matter环境激活
&lt;/h3>&lt;p>由于每次配置的 esp-idf 和 esp-matter 环境激活仅在当前终端有效，这里我们编写一个脚本文件，每次打开一个终端执行此脚本即可完成matter环境的激活：&lt;/p>
&lt;ul>
&lt;li>step1：新建一个名为 matter.sh 的脚本文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">vi&lt;/span> &lt;span class="n">matter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sh&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>step2：复制以下内容到 matter.sh&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># matter.sh
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">EPS_MATTER_PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/home/kurisaw/Desktop/esp/esp-gitee-tools/esp-matter&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">eq&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">];&lt;/span> &lt;span class="n">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">export&lt;/span> &lt;span class="n">IDF_PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/home/kurisaw/Desktop/esp/esp-gitee-tools/esp-idf&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">source&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">home&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">kurisaw&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">Desktop&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">esp&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">esp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">gitee&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tools&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">esp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">idf&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">export&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">source&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="n">EPS_MATTER_PATH&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">export&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">export&lt;/span> &lt;span class="n">IDF_CCACHE_ENABLE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">echo&lt;/span> &lt;span class="s">&amp;#34;enter matter dir&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cd&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="n">EPS_MATTER_PATH&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>step3：执行脚本以激活 matter 环境&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">source&lt;/span> &lt;span class="n">matter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sh&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2固件烧录">2.固件烧录
&lt;/h3>&lt;ul>
&lt;li>打开一个新的&lt;strong>终端1&lt;/strong>，进入示例目录设置并编译烧写到评估板运行&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cd&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">esp&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">esp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">matter&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">examples&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">light&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>设置要构建的 Matter 目标&lt;/li>
&lt;li>目前所有示例应用程序都支持目标芯片：esp32、esp32s3、esp32c3，一般仅需要使用 命令1 即可。&lt;strong>需要注意的是：如果你使用的设备为ESP32H2，而ESP32H2 仅在 lighting-app 中支持，执行 命令2 将其设置为目标&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># 命令1，通用命令，ESP32H2请执行命令2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">idf.py set-target (target chip)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 命令2，ESP32H2专用命令
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">idf.py --preview set-target esp32h2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里我使用的是 ESP32C3，所以执行以下命令即可&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">idf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">py&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">target&lt;/span> &lt;span class="n">esp32c3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>配置选项（可遵循默认配置即可，非特定配置可跳过这一步）&lt;/li>
&lt;/ul>
&lt;p>要&lt;strong>构建特定配置&lt;/strong>（示例&lt;code>m5stack&lt;/code>）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">rm sdkconfig
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">idf.py -D &amp;#39;SDKCONFIG_DEFAULTS=sdkconfig_m5stack.defaults&amp;#39; build
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意：如果使用特定的设备配置，强烈建议从默认设置之一开始并在此基础上进行自定义。某些配置具有在设备特定配置中自定义的不同约束（例如：主应用程序堆栈大小）。&lt;/p>
&lt;p>要自定义配置，请运行 menuconfig，在菜单中可完成自定义配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">idf.py menuconfig
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>构建应用程序&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">idf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">py&lt;/span> &lt;span class="n">build&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>擦除Flash&lt;/li>
&lt;/ul>
&lt;p>构建应用程序后，要通过 USB 连接您的设备来闪擦除它。然后运行以下命令擦除整个闪存，将演示应用程序闪存到设备上，然后监控其输出。&lt;/p>
&lt;p>请注意，有时您可能必须在设备尝试连接时按住设备上的启动按钮，然后才能刷机。对于 ESP32-DevKitC 设备，这在&lt;a class="link" href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32/hw-reference/esp32/get-started-devkitc.html#functional-description" target="_blank" rel="noopener"
>functional description diagram&lt;/a>中有所提及。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">idf.py -p (PORT) erase_flash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">idf.py -p (PORT) flash monitor
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>请替换&lt;code>(PORT)&lt;/code>为您系统的正确 USB 设备名称（如&lt;code>/dev/ttyUSB0&lt;/code>在 Linux 或&lt;code>/dev/tty.usbserial-101&lt;/code>Mac 上）。&lt;/p>
&lt;p>查看USB设备，esp32c3设备名为 &lt;code>ttyUSB0&lt;/code>，因此执行以下命令 ：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">idf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">py&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">dev&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ttyUSB0&lt;/span> &lt;span class="n">erase_flash&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">idf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">py&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">dev&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ttyUSB0&lt;/span> &lt;span class="n">flash&lt;/span> &lt;span class="n">monitor&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>注意此时的设备串口&lt;strong>终端1&lt;/strong>暂时先不关闭，后面可使用&lt;code>CTRL+]&lt;/code>关闭设备串口调试&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305301730041.png"
loading="lazy"
alt="image-20230530173001926"
>&lt;/p>
&lt;p>注意：某些用户可能必须在设备出现在 /dev/tty 之前安装&lt;a class="link" href="https://www.silabs.com/products/development-tools/software/usb-to-uart-bridge-vcp-drivers" target="_blank" rel="noopener"
>VCP 驱动程序。&lt;/a>&lt;/p>
&lt;p>提示：在监视器运行时，您可以通过按 Ctrl+t Ctrl+h 来查看各种监视器命令的菜单。&lt;/p>
&lt;h3 id="3项目调试">3.项目调试
&lt;/h3>&lt;p>以下四种方式可以用于调试在ESP32上运行应用程序：&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/project-chip/connectedhomeip/tree/master/src/controller/python" target="_blank" rel="noopener"
>Python Based Device Controller&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/project-chip/connectedhomeip/tree/master/examples/chip-tool" target="_blank" rel="noopener"
>Standalone chip-tool&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/project-chip/connectedhomeip/tree/master/src/darwin/CHIPTool" target="_blank" rel="noopener"
>iOS chip-tool App&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/project-chip/connectedhomeip/tree/master/examples/android/CHIPTool" target="_blank" rel="noopener"
>Android chip-tool App&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>注：这里使用 &lt;code>Standalone chip-tool&lt;/code>进行项目调试&lt;/strong>&lt;/p>
&lt;p>打开一个新的&lt;strong>终端2&lt;/strong>，我们需要运行构建的可执行文件并将远程设备的鉴别器和配对代码以及要使用的网络凭据传递给它，执行命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> esp-matter/connectedhomeip/connectedhomeip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 激活matter环境&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> scripts/activate.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305301723608.png"
loading="lazy"
alt="image-20230530172301207"
>&lt;/p>
&lt;ul>
&lt;li>调试WIFI设备（ESP32、ESP32C3、ESP32S3）&lt;/li>
&lt;/ul>
&lt;p>如果你使用的是Thread设备(ESPH2)或以太网设备(ESP32-Ethernet-Kit)，设备调试具体可以查看&lt;a class="link" href="https://github.com/project-chip/connectedhomeip/blob/master/docs/guides/esp32/build_app_and_commission.md" target="_blank" rel="noopener"
>此链接&lt;/a>&lt;/p>
&lt;p>执行下面命令将 matter 设备接入现有现有IP网络，这里我们&lt;strong>基于BLE调试&lt;/strong>&lt;/p>
&lt;p>&lt;strong>需要注意的是，你需要确保你的 Linux 蓝牙可用，如果是使用虚拟机的话需要考虑购买一个蓝牙适配器，可参考这个&lt;a class="link" href="https://m.tb.cn/h.UvoJzj4?tk=KpYpdNFRueB" target="_blank" rel="noopener"
>购买链接&lt;/a>&lt;/strong>&lt;/p>
&lt;p>接下来请按照我的步骤一步步执行：&lt;/p>
&lt;ul>
&lt;li>step1：安装 blueman 软件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install blueman &lt;span class="c1">#安装blueman软件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo /etc/init.d/bluetooth restart &lt;span class="c1"># 重启blueman服务&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>step2：确保你的蓝牙状态处于激活状态&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看蓝牙状态&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl status bluetooth
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://user-images.githubusercontent.com/98592772/236623922-496f12f1-837d-44eb-8cca-a76b5f132e2c.png"
loading="lazy"
alt="7e8b531f8b4be994ed272cf2e69703c"
>&lt;/p>
&lt;p>如果未运行，请执行：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo systemctl &lt;span class="nb">enable&lt;/span> bluetooth
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl start bluetooth
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>step3：确认蓝牙适配器已经被识别并启用&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hciconfig -a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://user-images.githubusercontent.com/98592772/236629771-b49be4da-0979-45b7-9484-f9bb2f895f29.png"
loading="lazy"
alt="LRHC%H77T8AU FZ_V$F@(Q6"
>&lt;/p>
&lt;p>根据提示信息我们可以得知我的蓝牙适配器名为&amp;quot;hci0&amp;quot;，并且状态为 &amp;ldquo;DOWN&amp;rdquo;，因此我们需要启用该蓝牙适配器。&lt;/p>
&lt;ul>
&lt;li>step4：启用蓝牙适配器&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo hciconfig hci0 up
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>step5：为了让 matter 设备连接蓝牙网络，我们需要让蓝牙适配器在任何时候可见，点击右上角的蓝牙图标，点击&lt;code>Adapters...---&amp;gt;Visibility Setting---&amp;gt;Always visible&lt;/code>，这一步很关键，&lt;strong>每次基于 BLE 调试都需要检查这一步！！&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305301744038.png"
loading="lazy"
alt="image-20230530174457873"
>&lt;/p>
&lt;ul>
&lt;li>step6：BLE调试，回到&lt;strong>终端2&lt;/strong>，执行如下命令&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> esp-matter/connectedhomeip/connectedhomeip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">out/debug/chip-tool pairing ble-wifi 0x7283 jetbot jetbotwyq &lt;span class="m">20202021&lt;/span> &lt;span class="m">3840&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意：本机ip和matter设备ip必须在同一局域网下&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>&lt;code>0x7283&lt;/code>（必须是十进制数或&lt;code>0x&lt;/code>- 前缀的十六进制数）是要分配给正在调试的节点的节点 ID，随意填写即可。&lt;/li>
&lt;li>&lt;code>jetbot 是 Wi-Fi SSID&lt;/code> 可以是字符串，也可以是&lt;code>hex:XXXXXXXX&lt;/code> SSID 的字节被编码为两位十六进制数字的形式。&lt;/li>
&lt;li>&lt;code>jetbotwyq&lt;/code> 是 Wi-Fi 密码，同样是字符串或十六进制数据&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305301754997.png"
loading="lazy"
alt="image-20230530175437844"
>&lt;/p>
&lt;p>在&lt;strong>终端1&lt;/strong>我们可以看到相关的ip信息：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305301756204.png"
loading="lazy"
alt="image-20230530175633102"
>&lt;/p>
&lt;ul>
&lt;li>step7：利用 chip tool 控制LED开关&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># open led&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">out/debug/chip-tool onoff on 0x7896 0x1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># close led&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">out/debug/chip-tool onoff off 0x7896 0x1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>这里的节点ID：0x7896需要和前面保持一致&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305301802687.jpg"
loading="lazy"
alt="cd20c5fede056bf65b089da69ab9f3a"
>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305301802294.jpg"
loading="lazy"
alt="f40b925710de89f66bf9ecf7ef27d7e"
>&lt;/p>
&lt;h2 id="chip-tool基于ble调试完整过程">CHIP TOOL基于BLE调试完整过程
&lt;/h2>&lt;div class="video-wrapper">
&lt;video
controls
src="./video.mp4"
autoplay
>
&lt;p>
Your browser doesn't support HTML5 video. Here is a
&lt;a href="./video.mp4">link to the video&lt;/a> instead.
&lt;/p>
&lt;/video>
&lt;/div>
&lt;hr>
&lt;h2 id="参考">参考
&lt;/h2>&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/project-chip/connectedhomeip/blob/master/docs/guides/chip_tool_guide.md" target="_blank" rel="noopener"
>CHIP Reference&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/project-chip/connectedhomeip/blob/master/docs/guides/esp32/setup_idf_chip.md" target="_blank" rel="noopener"
>Setup ESP-IDF and CHIP Environment&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/project-chip/connectedhomeip/blob/master/docs/guides/esp32/build_app_and_commission.md" target="_blank" rel="noopener"
>building and commissioning&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>【Matter】esp-matter环境下的应用实践（程序烧录及串口监视）</title><link>https://kurisaw.github.io/p/matteresp-matter%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%9A%84%E5%BA%94%E7%94%A8%E5%AE%9E%E8%B7%B5%E7%A8%8B%E5%BA%8F%E7%83%A7%E5%BD%95%E5%8F%8A%E4%B8%B2%E5%8F%A3%E7%9B%91%E8%A7%86/</link><pubDate>Sat, 06 May 2023 00:00:00 +0000</pubDate><guid>https://kurisaw.github.io/p/matteresp-matter%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%9A%84%E5%BA%94%E7%94%A8%E5%AE%9E%E8%B7%B5%E7%A8%8B%E5%BA%8F%E7%83%A7%E5%BD%95%E5%8F%8A%E4%B8%B2%E5%8F%A3%E7%9B%91%E8%A7%86/</guid><description>&lt;img src="https://kurisaw.github.io/p/matteresp-matter%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%9A%84%E5%BA%94%E7%94%A8%E5%AE%9E%E8%B7%B5%E7%A8%8B%E5%BA%8F%E7%83%A7%E5%BD%95%E5%8F%8A%E4%B8%B2%E5%8F%A3%E7%9B%91%E8%A7%86/cover.jpg" alt="Featured image of post 【Matter】esp-matter环境下的应用实践（程序烧录及串口监视）" />&lt;h1 id="esp-matter环境下的应用实践">esp-matter环境下的应用实践
&lt;/h1>&lt;hr>
&lt;h2 id="前提准备">前提准备
&lt;/h2>&lt;p>请确保你本地已经配置好 &lt;code>esp-idf&lt;/code> 及&lt;code>esp-matter&lt;/code>环境，可参考此博客&lt;a class="link" href="https://blog.csdn.net/qq_56914146/article/details/130484975?spm=1001.2014.3001.5501" target="_blank" rel="noopener"
>【Matter】esp-matter开发环境搭建&lt;/a>&lt;/p>
&lt;h2 id="设置环境变量">设置环境变量
&lt;/h2>&lt;h3 id="1esp-idf">1.ESP-IDF
&lt;/h3>&lt;p>根据官网提示，我们需要设置linux平台下的标准工具链，安装以下软件包：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">apt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="n">git&lt;/span> &lt;span class="n">wget&lt;/span> &lt;span class="n">flex&lt;/span> &lt;span class="n">bison&lt;/span> &lt;span class="n">gperf&lt;/span> &lt;span class="n">python3&lt;/span> &lt;span class="n">python3&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">pip&lt;/span> &lt;span class="n">python3&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">setuptools&lt;/span> &lt;span class="n">cmake&lt;/span> &lt;span class="n">ninja&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">build&lt;/span> &lt;span class="n">ccache&lt;/span> &lt;span class="n">libffi&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dev&lt;/span> &lt;span class="n">libssl&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dev&lt;/span> &lt;span class="n">dfu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">util&lt;/span> &lt;span class="n">libusb&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mf">1.0&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用 ESP-IDF 需要 CMake 3.5 或以上版本。较早的 Linux 发行版可能需要升级自身的软件源仓库，或开启 backports 套件库，或安装 “cmake3” 软件包（不是安装 “cmake”）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cd&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">esp&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">esp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">idf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">source&lt;/span> &lt;span class="n">export&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sh&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305041609281.png"
loading="lazy"
alt="image-20230504160909004"
>&lt;/p>
&lt;h3 id="2esp-matter">2.ESP-Matter
&lt;/h3>&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/project-chip/connectedhomeip/blob/master/docs/guides/BUILDING.md#installing-prerequisites-on-linux" target="_blank" rel="noopener"
>Linux&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/project-chip/connectedhomeip/blob/master/docs/guides/BUILDING.md#installing-prerequisites-on-macos" target="_blank" rel="noopener"
>macOS&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>由于我们使用的是Linux环境，所以此处仅作Linux下的说明，macOS可详见&lt;a class="link" href="https://github.com/project-chip/connectedhomeip/blob/master/docs/guides/BUILDING.md#installing-prerequisites-on-macos" target="_blank" rel="noopener"
>此处&lt;/a>&lt;/p>
&lt;p>在基于 Debian 的 Linux 发行版（例如 Ubuntu）上，可以使用以下命令满足这些依赖项：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt-get install git gcc g++ pkg-config libssl-dev libdbus-1-dev &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> libglib2.0-dev libavahi-client-dev ninja-build python3-venv python3-dev &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> python3-pip unzip libgirepository1.0-dev libcairo2-dev libreadline-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>准备编译matter所需环境。注：如切换了其他分支需要重新运行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ./esp/esp-matter/connectedhomeip/connectedhomeip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> scripts/bootstrap.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305060133538.png"
loading="lazy"
alt="image-20230506013329415"
>&lt;/p>
&lt;p>激活编译matter环境&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ./esp/esp-matter/connectedhomeip/connectedhomeip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> scripts/activate.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305041611578.png"
loading="lazy"
alt="image-20230504161123505"
>&lt;/p>
&lt;h2 id="matter-example编译下载">Matter Example编译下载
&lt;/h2>&lt;h3 id="1激活esp-matter环境">1.激活esp-matter环境
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cd&lt;/span> &lt;span class="n">esp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">idf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">export&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sh&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cd&lt;/span> &lt;span class="n">esp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">matter&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">export&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sh&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2选择esp设备">2.选择esp设备
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cd&lt;/span> &lt;span class="n">esp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">matter&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">examples&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">light&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">idf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">py&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">target&lt;/span> &lt;span class="n">esp32c3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>初次执行这个命令发生了如下报错：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="p">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nl">AttributeError&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">HTTPResponse&lt;/span>&lt;span class="err">&amp;#39;&lt;/span> &lt;span class="n">object&lt;/span> &lt;span class="n">has&lt;/span> &lt;span class="n">no&lt;/span> &lt;span class="n">attribute&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">strict&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在GitHub上参考此&lt;a class="link" href="https://github.com/espressif/esp-idf/issues/11340" target="_blank" rel="noopener"
>issue&lt;/a>，并执行以下命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">pip&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">U&lt;/span> &lt;span class="s">&amp;#34;urllib3&amp;lt;2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>同时重新执行esp-matter安装脚本：&lt;/p>
&lt;p>由于需要重新运行安装脚本命令，此处直接执行的话会报错，参考此&lt;a class="link" href="https://github.com/kurisaW/Summer-of-Open-Source/issues/7" target="_blank" rel="noopener"
>issue&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">rm&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">rf&lt;/span> &lt;span class="n">esp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">matter&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">connectedhomeip&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">connectedhomeip&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">environment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cd&lt;/span> &lt;span class="n">esp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">matter&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">install&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sh&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">pip&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">U&lt;/span> &lt;span class="s">&amp;#34;urllib3&amp;lt;2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后回到示例工程下继续执行esp设备选择&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cd&lt;/span> &lt;span class="n">esp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">matter&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">examples&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">light&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">idf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">py&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">target&lt;/span> &lt;span class="n">esp32c3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此时发生了新的错误：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305060221146.png"
loading="lazy"
alt="image-20230506022134054"
>&lt;/p>
&lt;p>由于示例工程下的build以前遗留的构建文件，而系统在执行程序时并不会覆盖或主动删除旧的构建文件，因此需要用户手动删除，因此正确的操作就是：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">rm&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">r&lt;/span> &lt;span class="n">esp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">matter&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">examples&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">light&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">build&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">idf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">py&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">target&lt;/span> &lt;span class="n">esp32c3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>最后成功解决问题：&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/98592772/236539480-35af78e1-382f-4092-a25b-fb2a09004d0a.png"
loading="lazy"
alt="b372338ad9384db034000d7839549b5"
>&lt;/p>
&lt;h3 id="3编译工程">3.编译工程
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">idf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">py&lt;/span> &lt;span class="n">build&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305060250998.png"
loading="lazy"
alt="image-20230506025001282"
>&lt;/p>
&lt;h3 id="4sdk烧写">4.SDK烧写
&lt;/h3>&lt;p>第一次烧写 SDK 时，需要擦除整个 flash 再执行烧录命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">idf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">py&lt;/span> &lt;span class="n">erase_flash&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305060252819.png"
loading="lazy"
alt="image-20230506025047817"
>&lt;/p>
&lt;p>烧录程序并打开串口监视&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">idf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">py&lt;/span> &lt;span class="n">flash&lt;/span> &lt;span class="n">monitor&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以看到烧录进度：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305060251334.png"
loading="lazy"
alt="image-20230506025133178"
>&lt;/p>
&lt;p>包括串口监视器的提示信息，同时执行以下命令可退出串口监视：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CTRL&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305060254172.png"
loading="lazy"
alt="image-20230506025401001"
>&lt;/p>
&lt;p>那么esp-matter项目环境的编译下载就先讲到这里，后面再进行详细的使用教程的讲解。&lt;/p>
&lt;hr>
&lt;p>参考链接：&lt;/p>
&lt;p>&lt;a class="link" href="https://blog.csdn.net/hydfxy2018/article/details/122041168?spm=1001.2101.3001.6650.11&amp;amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-11-122041168-blog-127516686.pc_relevant_default&amp;amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-11-122041168-blog-127516686.pc_relevant_default&amp;amp;utm_relevant_index=12" target="_blank" rel="noopener"
>Matter Over Wifi 例程体验（CHIP Over Wifi）&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://blog.csdn.net/weixin_40209493/article/details/125814311?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522168324979316800211536064%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;amp;request_id=168324979316800211536064&amp;amp;biz_id=0&amp;amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-4-125814311-null-null.142%5ev86%5econtrol_2,239%5ev2%5einsert_chatgpt&amp;amp;utm_term=matter%E6%8A%A5%E9%94%99&amp;amp;spm=1018.2226.3001.4187" target="_blank" rel="noopener"
>ESP-Matter 环境测试&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://blog.csdn.net/puweiqi/article/details/129474079?spm=1001.2101.3001.6650.2&amp;amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EYuanLiJiHua%7EPosition-2-129474079-blog-125973073.235%5Ev32%5Epc_relevant_default_base3&amp;amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EYuanLiJiHua%7EPosition-2-129474079-blog-125973073.235%5Ev32%5Epc_relevant_default_base3&amp;amp;utm_relevant_index=3" target="_blank" rel="noopener"
>matter搭建环境&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://docs.espressif.com/projects/esp-matter/en/main/esp32/developing.html" target="_blank" rel="noopener"
>https://docs.espressif.com/projects/esp-matter/en/main/esp32/developing.html&lt;/a>&lt;/p></description></item><item><title>【Matter】esp-matter开发环境搭建</title><link>https://kurisaw.github.io/p/matteresp-matter%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link><pubDate>Thu, 04 May 2023 00:00:00 +0000</pubDate><guid>https://kurisaw.github.io/p/matteresp-matter%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid><description>&lt;img src="https://kurisaw.github.io/p/matteresp-matter%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/cover.jpg" alt="Featured image of post 【Matter】esp-matter开发环境搭建" />&lt;h1 id="esp-matter开发环境搭建">esp-matter开发环境搭建
&lt;/h1>&lt;hr>
&lt;h2 id="前提准备">前提准备
&lt;/h2>&lt;h3 id="1ubuntu2204磁盘容量不小于80g">1.Ubuntu22.04（磁盘容量不小于80G）
&lt;/h3>&lt;h3 id="2科学上网环境">2.科学上网环境
&lt;/h3>&lt;p>由于后面的 esp-matter 测试的时候需要使用到科学上网环境，所以我们需要提前确保 linux 环境能够使用科学上网。&lt;/p>
&lt;p>参考链接：&lt;a class="link" href="https://kurisaw.github.io/p/%e7%bb%8f%e9%aa%8c%e5%88%86%e4%ba%ablinux-%e7%8e%af%e5%a2%83%e4%b8%8bv2ray%e7%9a%84%e4%bd%bf%e7%94%a8/" target="_blank" rel="noopener"
>【经验分享】Linux 环境下v2ray的使用&lt;/a>&lt;/p>
&lt;h2 id="esp-idf-开发环境搭建">esp-idf 开发环境搭建
&lt;/h2>&lt;h3 id="1esp-idf-依赖环境安装">1.ESP-IDF 依赖环境安装
&lt;/h3>&lt;blockquote>
&lt;p>参考https://docs.espressif.com/projects/esp-idf/en/v4.4.3/esp32/get-started/linux-setup.html&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">apt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="n">git&lt;/span> &lt;span class="n">wget&lt;/span> &lt;span class="n">flex&lt;/span> &lt;span class="n">bison&lt;/span> &lt;span class="n">gperf&lt;/span> &lt;span class="n">python3&lt;/span> &lt;span class="n">python3&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">pip&lt;/span> &lt;span class="n">python3&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">setuptools&lt;/span> &lt;span class="n">cmake&lt;/span> &lt;span class="n">ninja&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">build&lt;/span> &lt;span class="n">ccache&lt;/span> &lt;span class="n">libffi&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dev&lt;/span> &lt;span class="n">libssl&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dev&lt;/span> &lt;span class="n">dfu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">util&lt;/span> &lt;span class="n">libusb&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mf">1.0&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>由于在克隆官方esp-idf仓库的时候一般会发生如下两个错误：&lt;/p>
&lt;ul>
&lt;li>Problem1：执行 git submodule 速度慢&lt;/li>
&lt;li>Problem2：执行install.sh 速度慢&lt;/li>
&lt;/ul>
&lt;p>所以我们这里特别着重讲解，注意，这里解决问题的顺序与esp-idf环境搭建是一起进行的，读者可以顺着流程走。&lt;/p>
&lt;h3 id="2problem1-solution">2.Problem1 solution
&lt;/h3>&lt;p>首先使用递归克隆命令克隆整个仓库到文件夹下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">mkdir&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">home&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">kurisaw&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">Desktop&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">esp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">git&lt;/span> &lt;span class="n">clone&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">recursive&lt;/span> &lt;span class="nl">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="c1">//github.com/espressif/esp-idf.git
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">git&lt;/span> &lt;span class="n">submodule&lt;/span> &lt;span class="n">update&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">init&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">recursive&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>由于 esp-idf 仓库下有很多递归的下游仓库，一般使用 GitHub 下载的话也会导致递归下载失败，所以乐鑫官方提供了两种解决方案，包括镜像仓库使用、submodule 更新、开发工具安装等，可加速环境的搭建。解决方案如下：&lt;/p>
&lt;ul>
&lt;li>jihu-mirror 使用（推荐）&lt;/li>
&lt;li>submodule-update 使用（不推荐）&lt;/li>
&lt;/ul>
&lt;h4 id="21--jihu-mirror-使用推荐">2.1 jihu-mirror 使用（推荐）
&lt;/h4>&lt;ul>
&lt;li>Step 1：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">git&lt;/span> &lt;span class="n">clone&lt;/span> &lt;span class="nl">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="c1">//gitee.com/EspressifSystems/esp-gitee-tools.git
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">cd&lt;/span> &lt;span class="n">esp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">gitee&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tools&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Step 2：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 使用如下命令将仓库的 URL 进行替换：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">git&lt;/span> &lt;span class="n">config&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">global&lt;/span> &lt;span class="n">url&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nl">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="c1">//jihulab.com/esp-mirror/espressif/esp-idf.insteadOf https://github.com/espressif/esp-idf
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>当我们使用命令 &lt;code>git clone https://github.com/espressif/esp-idf&lt;/code> 时，默认的 URL &lt;code>https://github.com/espressif/esp-idf&lt;/code> 将被自动替换成 &lt;code>https://jihulab.com/esp-mirror/espressif/esp-idf&lt;/code>。&lt;/p>
&lt;ul>
&lt;li>Step 3：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 启用镜像URL
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">jihu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">mirror&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sh&lt;/span> &lt;span class="n">set&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用命令 &lt;code>./jihu-mirror.sh unset&lt;/code> 恢复，不使用镜像的 URL。&lt;/p>
&lt;ul>
&lt;li>Step 4：当使用镜像 URL 之后，再递归克隆 esp-idf 仓库&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git clone --recursive https://github.com/espressif/esp-idf.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>当然如果不想使用镜像的URL可以使用如下命令进行恢复：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">jihu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">mirror&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sh&lt;/span> &lt;span class="n">unset&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="22--submodule-update-使用不推荐">2.2 submodule-update 使用（不推荐）
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>Step 1：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">git&lt;/span> &lt;span class="n">clone&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">gitee&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">EspressifSystems&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">esp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">gitee&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tools&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">git&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>Step 2：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 仅克隆 esp-idf，不包含子模块
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">git&lt;/span> &lt;span class="n">clone&lt;/span> &lt;span class="nl">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="c1">//gitee.com/EspressifSystems/esp-idf.git
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>Step 3：&lt;/li>
&lt;/ul>
&lt;p>可以有两种方式来更新 submodules。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>方式一&lt;/p>
&lt;p>进入 esp-gitee-tools 目录，export submodule-update.sh 所在路径，方便后期使用，如：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cd&lt;/span> &lt;span class="n">esp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">gitee&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tools&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">EGT_PATH&lt;/span>&lt;span class="o">=$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pwd&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>进入 esp-idf 目录执行 submodule-update.sh 脚本：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd esp-idf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$EGT_PATH/submodule-update.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>方式二&lt;/p>
&lt;p>&lt;code>submodule-update.sh&lt;/code> 脚本支持将待更新 submodules 的工程路径作为参数传入，例如：&lt;code>submodule-update.sh PATH_OF_PROJ&lt;/code>。&lt;/p>
&lt;p>假如 Step 2 中 clone 的 esp-idf 位于 ~/git/esp32-sdk/esp-idf 目录，可使用以下方式来更新：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cd&lt;/span> &lt;span class="n">esp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">gitee&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tools&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">./&lt;/span>&lt;span class="n">submodule&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sh&lt;/span> &lt;span class="o">~/&lt;/span>&lt;span class="n">git&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">esp32&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">sdk&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">esp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">idf&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果要更新其他工程，可以同样方式。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>值得吐槽的是， submodule-update 这种方法还需要保持上游代码分支的提交历史一致，如果官方未及时更新则会导致该脚本暂时失效，不推荐使用，避坑！！&lt;/p>
&lt;/blockquote>
&lt;h3 id="3problem2-solution">3.Problem2 solution
&lt;/h3>&lt;p>下面说第二个问题：执行./install.sh速度慢的问题&lt;/p>
&lt;p>在 Espressif Systems 的 esp-idf 开发框架中，某些组件的构建过程需要从 GitHub 的 release 页面下载预编译的二进制文件。然而，在中国大陆访问 GitHub 的速度往往较慢并且不稳定，为了改善这个问题，Espressif Systems 将这些预编译的二进制文件托管在国内的服务器上，并提供了一个名为 &lt;code>IDF_GITHUB_ASSETS&lt;/code> 的环境变量来指定这个地址。在设置了 &lt;code>IDF_GITHUB_ASSETS&lt;/code> 变量之后，构建过程将会从这个指定的地址下载预编译的二进制文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">export&lt;/span> &lt;span class="n">IDF_GITHUB_ASSETS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;dl.espressif.com/github_assets&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后再执行安装命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">install&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sh&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在这还报了一个错误&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305041247286.png"
loading="lazy"
alt="image-20230504124717772"
>&lt;/p>
&lt;p>我们根据提示安装&lt;code>python3.10-venv&lt;/code>，并再次执行安装命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">apt&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="n">python3&lt;/span>&lt;span class="mf">.10&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">venv&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">install&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sh&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305041249721.png"
loading="lazy"
alt="image-20230504124913620"
>&lt;/p>
&lt;p>至此，esp-idf 的安装工具就告一段落了。&lt;/p>
&lt;h2 id="esp-matter开发环境搭建-1">esp-matter开发环境搭建
&lt;/h2>&lt;blockquote>
&lt;p>参考：&lt;a class="link" href="https://github.com/espressif/esp-matter" target="_blank" rel="noopener"
>【乐鑫 Matter SDK GitHub】&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>**注意：如果上面的 esp-idf 开发环境的搭建使用的是 jihu-mirror 方式，那么你需要取消esp镜像，按理说这部分错误不应该发生，但实际上确实存在这部分问题，请执行命令：&lt;code>./jihu-mirror.sh unset&lt;/code>取消esp镜像！！ **&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">git&lt;/span> &lt;span class="n">clone&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">recursive&lt;/span> &lt;span class="nl">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="c1">//github.com/espressif/esp-matter.git
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>若过程有报错，请执行下面命令在Git 仓库中获取到所有子模块，并将所有子模块及其下层子模块更新至最新版本。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git submodule update --init --recursive
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>执行安装命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">install&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sh&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>本以为到这就结束了，但不出意外的话意外发生了，在安装过程中发生了报错&amp;hellip;&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> Building wheel for pycryptodome (setup.py): started
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> error: subprocess-exited-with-error
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> × python setup.py bdist_wheel did not run successfully.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ exit code: 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ╰─&amp;gt; See above for output.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> note: This error originates from a subprocess, and is likely not a problem with pip.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Building wheel for pycryptodome (setup.py): finished with status &amp;#39;error&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ERROR: Failed building wheel for pycryptodome
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Running setup.py clean for pycryptodome
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Building wheel for gevent (pyproject.toml): started
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ......
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我们查看&lt;code>install.sh&lt;/code>文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/usr/bin/env bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> -e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">basedir&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>dirname &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$0&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">ESP_MATTER_PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">cd&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">basedir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">pwd&lt;/span>&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">MATTER_PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ESP_MATTER_PATH&lt;/span>&lt;span class="si">}&lt;/span>/connectedhomeip/connectedhomeip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> ESP_MATTER_PATH
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Running Matter Setup&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">MATTER_PATH&lt;/span>&lt;span class="si">}&lt;/span>/scripts/bootstrap.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Installing zap-cli&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Run the zap_download.py and extract the path of installed binary&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># eg output before cut: &amp;#34;export ZAP_INSTALL_PATH=zap/zap-v2023.03.06-nightly&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># output after cut: zap/zap-v2023.03.06-nightly&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># TODO: Remove the zap-version after https://github.com/project-chip/connectedhomeip/pull/25727 merged&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">zap_path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>python3 &lt;span class="si">${&lt;/span>&lt;span class="nv">ESP_MATTER_PATH&lt;/span>&lt;span class="si">}&lt;/span>/connectedhomeip/connectedhomeip/scripts/tools/zap/zap_download.py &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --sdk-root &lt;span class="si">${&lt;/span>&lt;span class="nv">ESP_MATTER_PATH&lt;/span>&lt;span class="si">}&lt;/span>/connectedhomeip/connectedhomeip --zap RELEASE --zap-version v2023.03.27-nightly &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --extract-root .zap 2&amp;gt;/dev/null &lt;span class="p">|&lt;/span> cut -d&lt;span class="o">=&lt;/span> -f2&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Check whether the download is successful.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="nv">$zap_path&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Failed to install zap-cli&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> deactivate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Move files to one directory up, so that binaries will be in $ESP_MATTER_PATH/.zap/ directory and export.sh can leverage the fixed path&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -d &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ESP_MATTER_PATH&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/.zap&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> rm -r &lt;span class="si">${&lt;/span>&lt;span class="nv">ESP_MATTER_PATH&lt;/span>&lt;span class="si">}&lt;/span>/.zap
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir &lt;span class="si">${&lt;/span>&lt;span class="nv">ESP_MATTER_PATH&lt;/span>&lt;span class="si">}&lt;/span>/.zap
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mv &lt;span class="nv">$zap_path&lt;/span>/* &lt;span class="si">${&lt;/span>&lt;span class="nv">ESP_MATTER_PATH&lt;/span>&lt;span class="si">}&lt;/span>/.zap/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm -r &lt;span class="nv">$zap_path&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod +x &lt;span class="si">${&lt;/span>&lt;span class="nv">ESP_MATTER_PATH&lt;/span>&lt;span class="si">}&lt;/span>/.zap/zap-cli
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Building host tools&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gn --root&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">MATTER_PATH&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> gen &lt;span class="si">${&lt;/span>&lt;span class="nv">MATTER_PATH&lt;/span>&lt;span class="si">}&lt;/span>/out/host
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ninja -C &lt;span class="si">${&lt;/span>&lt;span class="nv">MATTER_PATH&lt;/span>&lt;span class="si">}&lt;/span>/out/host
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Host tools built at: &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">MATTER_PATH&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/out/host&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Exit Matter environment&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">deactivate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Installing python dependencies for mfg_tool&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">python3 -m pip install -r &lt;span class="si">${&lt;/span>&lt;span class="nv">ESP_MATTER_PATH&lt;/span>&lt;span class="si">}&lt;/span>/tools/mfg_tool/requirements.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Installing python dependencies for Matter&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">python3 -m pip install -r &lt;span class="si">${&lt;/span>&lt;span class="nv">ESP_MATTER_PATH&lt;/span>&lt;span class="si">}&lt;/span>/requirements.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;All done! You can now run:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; . &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">basedir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/export.sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>发现问题出在第10到13行，我尝试安装系统必要的依赖项来解决这个问题，成功解决！命令如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt install build-essential python3-dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install pkg-config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install libglib2.0-dev libglib2.0-dev-bin libgio2.0-cil-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a class="link" href="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305041452447.png" target="_blank" rel="noopener"
>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305041452447.png"
loading="lazy"
alt="image-20230504145216015"
>&lt;/a>&lt;/p>
&lt;p>接着在安装&lt;code>zap-cli&lt;/code>的时候再次发生报错，需要安装以下依赖库，并再次运行安装脚本命令，等待编译&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt-get install libssl-dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install pip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./install.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a class="link" href="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305041502605.png" target="_blank" rel="noopener"
>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305041502605.png"
loading="lazy"
alt="image-20230504150238105"
>&lt;/a>&lt;/p>
&lt;p>最后看到&lt;code>All done!&lt;/code>即代表环境安装成功！&lt;/p>
&lt;p>&lt;a class="link" href="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305041535612.png" target="_blank" rel="noopener"
>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img2023/202305041535612.png"
loading="lazy"
alt="image-20230504153243388"
>&lt;/a>&lt;/p>
&lt;p>至此，esp-matter开发环境搭建成功！&lt;/p></description></item></channel></rss>