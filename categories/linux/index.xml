<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on kurisaW</title><link>https://kurisaw.github.io/categories/linux/</link><description>Recent content in Linux on kurisaW</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 09 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://kurisaw.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>【Linux系统开发】Linux常见开发汇总</title><link>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91linux%E5%B8%B8%E8%A7%81%E5%BC%80%E5%8F%91%E6%B1%87%E6%80%BB/</link><pubDate>Mon, 09 Oct 2023 00:00:00 +0000</pubDate><guid>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91linux%E5%B8%B8%E8%A7%81%E5%BC%80%E5%8F%91%E6%B1%87%E6%80%BB/</guid><description>&lt;img src="https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91linux%E5%B8%B8%E8%A7%81%E5%BC%80%E5%8F%91%E6%B1%87%E6%80%BB/cover.jpg" alt="Featured image of post 【Linux系统开发】Linux常见开发汇总" />&lt;h2 id="1vmware-tools-灰色无法点击">1.vmware tools 灰色无法点击
&lt;/h2>&lt;p>执行如下步骤：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt-get update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get upgrade
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install open-vm-tools-desktop -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="2linux安装搜狗输入法">2.linux安装搜狗输入法
&lt;/h2>&lt;p>终端安装 fcitx&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt-get install fcitx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>到搜狗官方下载 deb 包：&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>&lt;a class="link" href="https://shurufa.sogou.com/linux" target="_blank" rel="noopener"
>https://shurufa.sogou.com/linux&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>使用linux自带的安装程序安装输入法后，安装如下输入法依赖：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install libqt5qml5 libqt5quick5 libqt5quickwidgets5 qml-module-qtquick2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install libgsettings-qt1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>重启即可&lt;/p>
&lt;h2 id="3cmake安装指定版本">3.Cmake安装指定版本
&lt;/h2>&lt;p>首先去官网下载所需版本的压缩包：&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>&lt;a class="link" href="https://cmake.org/files/" target="_blank" rel="noopener"
>https://cmake.org/files/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>执行解压命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">tar -zxv -f cmake-3.22.6.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>安装相关依赖：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt-get install g++
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install libssl-dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install make
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>进入解压后的cmake文件，执行：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">./bootstrap
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>编译构建：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">make
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>安装：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="4ubuntu中使用-st-link">4.ubuntu中使用 st-link
&lt;/h2>&lt;p>安装依赖项：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt-get install gcc build-essential cmake libusb-1.0 libusb-1.0-0-dev libgtk-3-dev pandoc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>依次执行如下步骤：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># download source code&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone https://github.com/stlink-org/stlink
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> stlink
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># build&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cmake .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># install&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> bin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp st-* /usr/local/bin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ../lib
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp *.so* /lib32
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># add rules&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp stlink/config/udev/rules.d/49-stlinkv* /etc/udev/rules.d/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo udevadm control --reload-rules
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo udevadm trigger
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>尝试烧录代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#check if st-link is plugged&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo st-info --probe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># write hex&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo st-flash --format ihex write myapp.hex
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 一般下载一次，会失败，需要刷入两次；&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># write bin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo st-flash write in.bin 0x8000000 &lt;span class="c1">#stm32f4xx&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># read bin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">st-flash &lt;span class="nb">read&lt;/span> out.bin 0x8000000 0x1000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># restart&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 向嵌入式控制器中下载一次，控制器就不运行了，需要重启一下，才能正常工作&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo st-flash reset
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>具体的GDB调试可以参考这篇文章：&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>&lt;a class="link" href="https://club.rt-thread.org/ask/article/cf31a215be3ee5e9.html" target="_blank" rel="noopener"
>https://club.rt-thread.org/ask/article/cf31a215be3ee5e9.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item><item><title>【Linux系统开发】Ubuntu配置SFTP服务</title><link>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91ubuntu%E9%85%8D%E7%BD%AEsftp%E6%9C%8D%E5%8A%A1/</link><pubDate>Fri, 07 Apr 2023 00:00:00 +0000</pubDate><guid>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91ubuntu%E9%85%8D%E7%BD%AEsftp%E6%9C%8D%E5%8A%A1/</guid><description>&lt;img src="https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91ubuntu%E9%85%8D%E7%BD%AEsftp%E6%9C%8D%E5%8A%A1/cover.jpg" alt="Featured image of post 【Linux系统开发】Ubuntu配置SFTP服务" />&lt;h2 id="sftp介绍">SFTP介绍
&lt;/h2>&lt;p>SFTP是指Secure File Transfer Protocol，即安全文件传输协议。它提供了一种安全的网络加密方法来传输文件。SFTP与FTP具有几乎相同的语法和功能，是SSH的其中一部分，可安全地将文件传输到服务器。在SSH软件包中，已经包含了一个名为SFTP（Secure File Transfer Protocol）的安全文件信息传输子系统。SFTP本身没有单独的守护进程，必须使用sshd守护进程（默认端口号为22）来完成相应的连接和答复操作。因此，从某种意义上说，SFTP并不像服务器程序，而更像客户端程序。由于SFTP也使用加密传输认证信息和数据，因此使用SFTP非常安全。但是，由于这种传输方式使用了加密/解密技术，因此传输效率比普通的FTP要低得多。如果您对网络安全性要求更高，可以使用SFTP代替FTP。（参考资料：百度百科）&lt;/p>
&lt;h2 id="安装步骤">安装步骤
&lt;/h2>&lt;h4 id="1目标">1.目标：
&lt;/h4>&lt;p>在Ubuntu系统上开通SFTP文件服务，允许某些用户上传及下载文件。这些用户只能使用SFTP传输文件，不能使用SSH终端访问服务器，并且SFTP不能访问系统文件。系统管理员则既能使用SFTP传输文件，也能使用SSH远程管理服务器。
以下是将允许SFTP-users用户组内的用户使用SFTP，但不允许使用SSH Shell，且该组用户不能访问系统文件。在SFTP-users组内创建一个名为“SFTP”的用户。允许SSH-users用户组内的用户使用SFTP以及SSH。系统管理员的账户名为yifang。&lt;/p>
&lt;h4 id="2查看ubuntu系统信息">2.查看Ubuntu系统信息
&lt;/h4>&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img/202304071010234.png"
loading="lazy"
alt="image-20230407101026858"
>&lt;/p>
&lt;h4 id="3检查是否已安装sftp">3.检查是否已安装SFTP
&lt;/h4>&lt;p>在Linux系统中，一般RedHat系统默认已经安装了openssh-client和openssh-server，即默认已经集成了SFTP服务，不需要重新安装；而Ubuntu系统默认只安装了openssh-client，要用SFTP的话还需要安装openssh-server。如果系统已安装有openssh-client，则为了防止安装openssh-server时两者版本不兼容，可以先将openssh-client卸载后再安装。如下所示，如果Ubuntu没有安装SFTP，则会显示没有安装：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img/202304071011398.png"
loading="lazy"
alt="image-20230407101132327"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="err">安装&lt;/span>&lt;span class="n">openssh&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nl">client&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">sudo&lt;/span> &lt;span class="n">apt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="n">openssh&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">client&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">安装&lt;/span>&lt;span class="n">openssh&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nl">server&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">sudo&lt;/span> &lt;span class="n">apt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="n">openssh&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">server&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里由于我已经完成安装了，此处就不做安装演示，具体下载命令如上所示。&lt;/p>
&lt;h4 id="4新建用户组sftp-users并新建用户sftp">4.新建用户组SFTP-users，并新建用户SFTP
&lt;/h4>&lt;p>为了方便管理权限，创建用户组可以用于SFTP访问。然后创建sftp用户：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">addgroup&lt;/span> &lt;span class="n">sftp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">users&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">adduser&lt;/span> &lt;span class="nf">sftp&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">这部分会让你新建用户组信息，建议最好截图保存下&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="5给sftp赋权并新建用户组ssh-users">5.给SFTP赋权并新建用户组SSH-users
&lt;/h4>&lt;p>将SFTP从其他所有用户组中移除并加入SFTP-users组，然后关闭其Shell访问：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">usermod&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">G&lt;/span> &lt;span class="n">sftp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">users&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">bin&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nb">false&lt;/span> &lt;span class="n">sftp&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>创建SSH用户组，并将管理员添加到该组（请注意usermod命令中的-a参数意味着不从其他用户组中移除）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">addgroup&lt;/span> &lt;span class="n">ssh&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">users&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">usermod&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">G&lt;/span> &lt;span class="n">ssh&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">users&lt;/span> &lt;span class="n">bbc2005&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="6创建并设置sftp用户目录">6.创建并设置SFTP用户目录
&lt;/h4>&lt;p>为“监狱”根目录和共享目录做准备，“监狱”根目录必须满足以下要求：
所有者为root，其他任何用户都不能拥有写入权限。因此，为了让SFTP用户能够上传文件，还必须在“监狱”根目录下创建一个普通用户能够写入的共享文件目录。为了方便管理员通过SFTP管理上传的文件，把这个共享文件目录配置为由yifang所有，允许SFTP-users读写，这样，管理员和SFTP用户组成员都能读写这个目录。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">mkdir&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">home&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sftp_root&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">mkdir&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">home&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sftp_root&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">shared&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">chown&lt;/span> &lt;span class="nl">yifang&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">sftp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">users&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">home&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sftp_root&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">shared&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">chmod&lt;/span> &lt;span class="mi">770&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">home&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sftp_root&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">shared&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="7修改ssh配置文件">7.修改SSH配置文件
&lt;/h4>&lt;p>在sshd_config文件的最后添加以下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">vi&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ssh&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sshd_config&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">AllowGroups&lt;/span> &lt;span class="n">ssh&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">users&lt;/span> &lt;span class="n">sftp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">users&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Match&lt;/span> &lt;span class="n">Group&lt;/span> &lt;span class="n">sftp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">users&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ChrootDirectory&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">home&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sftp_root&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">AllowTcpForwarding&lt;/span> &lt;span class="n">no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X11Forwarding&lt;/span> &lt;span class="n">no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ForceCommand&lt;/span> &lt;span class="n">internal&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">sftp&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这些内容的意思是：&lt;/p>
&lt;ul>
&lt;li>只允许ssh-users和SFTP-users通过SSH访问系统；&lt;/li>
&lt;li>针对SFTP-users用户，增加一些额外的设置：
&lt;ul>
&lt;li>将/home/sftp_root设置为该组用户的系统根目录（因此它们将不能访问该目录之外的其他系统文件）；&lt;/li>
&lt;li>禁止TCP forwarding和X11 forwarding；强制该组用户只能使用SFTP。&lt;/li>
&lt;li>如果需要进一步了解细节，可以使用“man sshd_config”命令。这样设置之后，SSH用户组可以访问SSH，并且不受其他限制；而SFTP用户组仅能使用SFTP进行访问，并被限制在监狱目录中。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="8sftp客户端验证">8.SFTP客户端验证
&lt;/h4>&lt;p>首先将虚拟机重启：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">reboot&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在本地Windows系统中，可以通过SFTP客户端来连接Ubuntu系统的SFTP服务，例如使用RaiDrive。&lt;/p>
&lt;p>查看ubuntu网络ip地址&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ifconfig
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img/202304071038531.png"
loading="lazy"
alt="image-20230407103802472"
>zhe&lt;/p>
&lt;p>这里我的IP地址为192.168.136.128。我们接着打开RaiDrive（安装配置可参考&lt;a class="link" href="https://blog.devyi.com/archives/418/" target="_blank" rel="noopener"
>RaiDrive—将网盘映射为磁盘&lt;/a>）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img/202304071044734.png"
loading="lazy"
alt="image-20230407104441660"
>&lt;/p>
&lt;p>此时我们点击连接并连接成功后会自动在我们windows下自动生成一个名为SFTP的网络磁盘，这时候我们就可以在windows下对虚拟机进行文件操作了。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/kurisaW/picbed/main/img/202304071046125.png"
loading="lazy"
alt="image-20230407104643007"
>&lt;/p></description></item><item><title>x210开发板根目录文件系统构建</title><link>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91x210%E5%BC%80%E5%8F%91%E6%9D%BF%E6%A0%B9%E7%9B%AE%E5%BD%95%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%9E%84%E5%BB%BA/</link><pubDate>Thu, 28 Jul 2022 00:00:00 +0000</pubDate><guid>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91x210%E5%BC%80%E5%8F%91%E6%9D%BF%E6%A0%B9%E7%9B%AE%E5%BD%95%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%9E%84%E5%BB%BA/</guid><description>&lt;img src="https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91x210%E5%BC%80%E5%8F%91%E6%9D%BF%E6%A0%B9%E7%9B%AE%E5%BD%95%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%9E%84%E5%BB%BA/cover.jpg" alt="Featured image of post x210开发板根目录文件系统构建" />&lt;h2 id="一开发板配置">一、开发板配置
&lt;/h2>&lt;p>（使用secureCRT）
首先确保开发板完成以下配置：&lt;/p>
&lt;p>主机IP：
&lt;code>set ipaddr192.168.1.10&lt;/code>
服务器IP：
&lt;code>set serverip 192.168.1.141&lt;/code>
网关：
&lt;code>set gatewayip 192.168.1.1&lt;/code>
子网掩码:
&lt;code>set netmask 255.255.255.0&lt;/code>
内核驱动设置：
&lt;code>set bootcmd 'tftp 30008000 zImage; bootm 30008000'&lt;/code>
bootargs配置：
&lt;code>set bootargs root=/dev/nfs nfsroot=192.168.1.141:/root/rootfs/x210_bsp ip=192.168.1.10:192.168.1.141:192.168.1.1:255.255.255.0::eth0:off init=/linuxrc console=ttySAC2,115200&lt;/code>&lt;/p>
&lt;p>最后输入save保存一下，这样开发板的网络和内核配置就设置好了&lt;/p>
&lt;h2 id="二了解rootfs">二、了解rootfs
&lt;/h2>&lt;p>rootfs的两种表现形式：
1、nfs方式启动的文件夹形式的rootfs（主机）&lt;/p>
&lt;p>2、用来烧录的镜像形式rootfs（开发板）&lt;/p>
&lt;h2 id="三虚拟机文件配置">三、虚拟机文件配置
&lt;/h2>&lt;h4 id="1目录配置">1.目录配置
&lt;/h4>&lt;p>首先我们需要root进入超级用户模式，在虚拟机的root目录下再次创建以下两个目录：
&lt;code>rootfs x210_bsp&lt;/code>&lt;/p>
&lt;p>这时候我们需要知道这两个文件夹下有什么：&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>x210_bsp：用于uboot烧录和配置&lt;/li>
&lt;li>rootfs：用于挂载开发板根文件系统&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h4 id="2x210_bsp配置">2.x210_bsp配置
&lt;/h4>&lt;p>首先进入到该目录下，并将文件qt_x210v3s_160307.tar.bz2复制到该目录下解压&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/b4f56856fa1447b6b49ea43313bc141a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
>&lt;/p>
&lt;p>以上是解压qt_x210v3s_160307.tar.bz2内的文件内容，后面会说到这个目录如何使用&lt;/p>
&lt;h4 id="3rootfs配置">3.rootfs配置
&lt;/h4>&lt;p>首先我们需要在该目录下继续创建一个名为x210_rootfs的文件夹，并且进入到该文件夹下，将我们上面提到的busybox文件复制到此目录下并解压&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/87600bf5cbf44ac3a94db3bc7bd01d78.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
>&lt;/p>
&lt;p>以上是解压busybox-1.24.1（这是我选择的busybox版本）的全部文件&lt;/p>
&lt;h4 id="4make-menuconfig">4.make menuconfig
&lt;/h4>&lt;p>进入x210_bsp/kernel 目录下，输入命令：make menuconfig进入图形化菜单&lt;/p>
&lt;blockquote>
&lt;p>这里我们按下面操作完成网络配置&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[*]Networking support ---&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Networking options ---&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://img-blog.csdnimg.cn/a33a8e4e25bc4335b263cdbc59bd79a6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
>&lt;/p>
&lt;blockquote>
&lt;p>网络文件系统设置&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">File systems ---&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [*]Networking File Systems ---&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>有需要把开发板作为服务器端的也可以选择把&lt;code>NFS server support&lt;/code>设置打开，这里我们仅实验客户端&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/ce11d76876fd463db53915dffde15776.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
>&lt;/p>
&lt;p>以上配置结束后输入命令&lt;code>make&lt;/code>编译，至此开发板uboot的网络和文件系统部分配置结束。&lt;/p>
&lt;h2 id="四busybox的移植实战">四、busybox的移植实战
&lt;/h2>&lt;h4 id="1了解busybox">1、了解busybox
&lt;/h4>&lt;blockquote>
&lt;p>busybox是一个集成了一百多个最常用linux命令和工具的软件,他甚至还集成了一个http服务器和一个telnet服务器,而所有这一切功能却只有区区1M左右的大小.我们平时用的那些linux命令就好比是分立式的电子元件,而busybox就好比是一个集成电路,把常用的工具和命令集成压缩在一个可执行文件里,功能基本不变,而大小却小很多倍。&lt;/p>
&lt;/blockquote>
&lt;h4 id="2busybox源码获取">2、busybox源码获取
&lt;/h4>&lt;p>&lt;a class="link" href="http://www.busybox.net/" target="_blank" rel="noopener"
>busybox官网&lt;/a>&lt;/p>
&lt;p>&lt;code>注意：我们在文件系统构建中，内核编译和文件系统的程序编译都必须是使用的统一交叉编译器。（选择将虚拟机中的交叉编译文件复制一份到开发板构建的文件系统下）&lt;/code>&lt;/p>
&lt;h4 id="3busybox配置">3、busybox配置
&lt;/h4>&lt;p>（1）修改Makefile&lt;/p>
&lt;p>首先进入&lt;code>~/rootfs/x210_rootfs/busybox-1.24.1&lt;/code>目录下&lt;/p>
&lt;p>输入命令&lt;code>vi Makefile&lt;/code>进入脚本进行以下修改&lt;/p>
&lt;p>173行：&lt;code>CROSS_COMPILE=/usr/local/arm/arm-2009q3/bin/arm-none-linux-gnueabi-&lt;/code>
&lt;code>注意：此处的交叉编译链需要对照自己电脑的交叉编译链&lt;/code>
191行：&lt;code>ARCH=arm&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/988e15e86dde4807aa26011e6686bc6f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
>&lt;/p>
&lt;p>（2）make menuconfig配置&lt;/p>
&lt;p>Tip:此处的图形化菜单需要ncurses库（联网下载）,由于之前博主自己在这里没有很深的基础知识，走了很多弯路。
因为后面的文件系统的挂载需要虚拟机切换网络状态为桥接模式，但是我的虚拟机桥接网络总是会反复重连，所以建议先将该库下载好，方便后续使用。&lt;/p>
&lt;p>make menuconfig&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Busybox&lt;/span> &lt;span class="n">Settings&lt;/span>&lt;span class="o">---&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Build&lt;/span> &lt;span class="n">Options&lt;/span>&lt;span class="o">---&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="n">Build&lt;/span> &lt;span class="n">BusyBox&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="n">binary&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">no&lt;/span> &lt;span class="n">shared&lt;/span> &lt;span class="n">libs&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Busybox&lt;/span> &lt;span class="n">Library&lt;/span> &lt;span class="n">Tuning&lt;/span>&lt;span class="o">---&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="n">vi&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">style&lt;/span> &lt;span class="n">line&lt;/span> &lt;span class="n">editing&lt;/span> &lt;span class="n">commands&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="n">Fancy&lt;/span> &lt;span class="n">shell&lt;/span> &lt;span class="n">prompts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Linux&lt;/span> &lt;span class="n">Module&lt;/span> &lt;span class="n">Utilities&lt;/span>&lt;span class="o">---&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span> &lt;span class="p">]&lt;/span>&lt;span class="n">Simplified&lt;/span> &lt;span class="n">modutils&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="n">insmod&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="n">rmmod&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="n">lsmod&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="n">modprobe&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="n">depmod&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Linux&lt;/span> &lt;span class="n">System&lt;/span> &lt;span class="n">Utilities&lt;/span>&lt;span class="o">---&amp;gt;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="n">mdev&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="n">Support&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">mdev&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">conf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="n">Support&lt;/span> &lt;span class="n">subdirs&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">symlinks&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="n">Support&lt;/span> &lt;span class="n">regular&lt;/span> &lt;span class="n">expressions&lt;/span> &lt;span class="n">substitutions&lt;/span> &lt;span class="n">when&lt;/span> &lt;span class="n">renaming&lt;/span> &lt;span class="n">dev&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="n">Support&lt;/span> &lt;span class="n">command&lt;/span> &lt;span class="n">execution&lt;/span> &lt;span class="n">at&lt;/span> &lt;span class="n">device&lt;/span> &lt;span class="n">addition&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">removal&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="n">Support&lt;/span> &lt;span class="n">loading&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">firmwares&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>大家学习使用的时候跟着上面的进行配置即可
配置完成后，输入以下命令：
&lt;code>make -j4&lt;/code> (4代表我主机的内核数)
无报错继续下一步：
make install&lt;/p>
&lt;blockquote>
&lt;p>解释：在Linux系统中安装软件的一般步骤：下载-配置-编译-安装，所以上面的make -j4就代表编译，make install代表安装&lt;/p>
&lt;/blockquote>
&lt;p>（3）设置busybox安装路径&lt;/p>
&lt;ul>
&lt;li>&lt;code>make menuconfig&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Busybox Settings ---&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Installation Options (&amp;#34;make install&amp;#34; behavior) ---&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> (./)BusyBox installation prefix) //这里设置安装路径
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://img-blog.csdnimg.cn/cf7de167425b47acaff070d610f78d1f.png"
loading="lazy"
>&lt;/p>
&lt;p>（4）解决方案
在虚拟机的配置中，由于代码的复杂性时常让我们不能很全面清晰的看到自己所做的改变，有时候就会出现各种各样的状况。&lt;/p>
&lt;p>make -j4编译可能遇到的问题：&lt;/p>
&lt;ul>
&lt;li>&lt;code>sync.c(text.sync_main+0x78):undefined reference to 'syncfs'&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>分析：&lt;/code>可能是gcc和当前busybox版本不兼容造成的，我们只需要将其禁用即可。&lt;/p>
&lt;p>&lt;code>解决方法：&lt;/code>&lt;/p>
&lt;p>&lt;code>make menuconfig&lt;/code>
点击/进入搜索，输入SYNC，根据提示禁用SYNC
最后再make -j4编译一下即可&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/7defb1eda80748d29c73a564f2e631be.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/2b4ded5286854f1ca4e7d8fae5e148c4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
>
&lt;img src="https://img-blog.csdnimg.cn/932a1580f3b54a5ca685be2b7c5c1dd7.png"
loading="lazy"
alt="在这里插入图片描述"
>&lt;/p>
&lt;p>其实还可以选择在源代码中解决这个问题，过程有些繁琐就不赘述，动手能力强的可以一试。&lt;/p>
&lt;p>（5）make install简述&lt;/p>
&lt;ul>
&lt;li>默认安装位置：./_install&lt;/li>
&lt;li>文件包含有：bin linuxrc sbin usr&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/002a97e1448542f784b04d188f6cb7f7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
>&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->ls -l可以看到： linuxrc -&amp;gt; bin/busybox //这个linuxrc其实就是个符号链接 &lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/b97a1a96e2a94503832d05c0f8ca072e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
>&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->这里也不难发现，bin下的所有的符号链接都指向了busybox&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>（6）make menuconfig更改NFS挂载目录到/root/rootfs/x210_rootfs下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">make menuconfig
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Busybox Settings —&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Installation Options (“make install” behavior) —&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> (/root/rootfs/x210_rootfs)BusyBox installation prefix
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>执行&lt;code>make install&lt;/code>后，回到被挂载的目录下，可以发现这四个文件已经生成。&lt;/p>
&lt;h2 id="五nfs挂载根文件系统">五、NFS挂载根文件系统
&lt;/h2>&lt;h4 id="1nfs简述">1.NFS简述
&lt;/h4>&lt;ul>
&lt;li>NFS 是Network File System的缩写，即网络文件系统。&lt;/li>
&lt;li>功能：通过网络让不同的机器、不同的操作系统能够彼此分享个别的数据，让应用程序在客户端通过网络访问位于服务器磁盘中的数据。&lt;/li>
&lt;/ul>
&lt;h4 id="2nfs服务器安装">2.NFS服务器安装
&lt;/h4>&lt;p>&lt;code>sudo apt-get install nfs-kernel-server&lt;/code>&lt;/p>
&lt;h4 id="3nfs使用过程">3.NFS使用过程
&lt;/h4>&lt;p>启动NFS服务器-&amp;gt;启动NFS客户端-&amp;gt;挂载NFS目录&lt;/p>
&lt;h4 id="4nfs配置">4.NFS配置
&lt;/h4>&lt;ul>
&lt;li>输入命令&lt;code>vim /etc/exports&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>在最后一行修改&lt;/p>
&lt;ul>
&lt;li>&lt;code>&amp;quot;文件挂载目录&amp;quot; *(rw,sync,no_root_squash,no_subtree_check)&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/a355d9b6e233404ea19531fa04947910.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>保存退出后，输入&lt;code>mount -t nfs -o nolock 192.168.240.33:/root/rootfs/x210_rootfs&lt;/code>(根据实际情况修改)&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/9383c4e9c6e74c7485d07a6aec6f99fd.png"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>输入命令&lt;code>/etc/init.d/nfs-kernel-server restart&lt;/code>重启NFS服务&lt;/li>
&lt;/ul>
&lt;h2 id="六开发板根目录配置">六、开发板根目录配置
&lt;/h2>&lt;p>首先将etc目录放置到挂载根目录下&lt;/p>
&lt;p>etc目录下载：&lt;/p>
&lt;p>&lt;a class="link" href="https://download.csdn.net/download/qq_56914146/85219254" target="_blank" rel="noopener"
>点击此处&lt;/a>&lt;/p>
&lt;h4 id="1inittab文件详解">1.inittab文件详解
&lt;/h4>&lt;p>&amp;lt;1&amp;gt;添加一个典型的inittab文件到etc目录下&lt;/p>
&lt;p>&lt;a class="link" href="https://download.csdn.net/download/qq_56914146/85219254" target="_blank" rel="noopener"
>inittab下载&lt;/a>&lt;/p>
&lt;p>&amp;lt;2&amp;gt;inittab格式解析&lt;/p>
&lt;p>&lt;code>id:runlevels:action:process&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/4f374d2fe1ca4f7da6f22403e314525f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="在这里插入图片描述"
>&lt;/p>
&lt;p>解释：&lt;/p>
&lt;ul>
&lt;li>id：标识符，即代表记录的名字&lt;/li>
&lt;li>runlevels（可不填）：用于指定该记录在哪些运行级别中运行，runlevel可以设定为单个运行级别，也可以设定多个运行级别&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/dd8867359c0c44c6945fc29dbf0a90a3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>action：用于描述该级别该执行什么操作（部分说明）&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/99fb967e453c456b989bd57ec0e84020.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>process：具体执行的命令&lt;/li>
&lt;/ul>
&lt;p>&amp;lt;3&amp;gt;了解busybox init与inittab之间的关系&lt;/p>
&lt;ul>
&lt;li>busybox init进程主要完成系统的初始化工作。&lt;/li>
&lt;/ul>
&lt;p>busybox init进程的工作流程：&lt;/p>
&lt;blockquote>
&lt;p>&lt;!-- raw HTML omitted -->为init设置信号处理过程-&amp;gt;初始化控制台-&amp;gt;剖析/etc/inittab文件-&amp;gt;执行系统初始化命令行，缺省（默认）情况下会使用/etc/init.d/rcS-&amp;gt;执行所有导致 init 暂停的 inittab 命令(动作类型： wait)-&amp;gt;执行所有仅执行一次的 inittab(动作类型： once)&lt;!-- raw HTML omitted -->&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>一旦完成以上工作， init 进程便会&lt;code>循环执行&lt;/code>以下进程：&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&amp;lt;1&amp;gt;执行所有终止时必须重新启动的 inittab 命令(动作类型： respawn）
&amp;lt;2&amp;gt;执行所有终止时必须重新启动但启动前必须询问用户的 inittab 命令（动作类型： askfirst)&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>简而言之，就是初始化控制台之后， BusyBox 会检查/etc/inittab 文件是否存在，如果此文件不存在， BusyBox 会使用缺省的inittab 配置，它主要为系统重引导，系统挂起以及 init 重启动设置缺省的动作，此外它还会为四个虚拟控制台（tty1 到 tty4）设置启动 shell 的动作。如果未建立这些设备文件， BusyBox 会报错。&lt;/li>
&lt;/ul>
&lt;p>注意：理解inittab的关键就是明白“当满足action的条件时就会执行process这个程序。” 去分析busybox的源代码就会发现，busybox最终会进入一个死循环，在这个死循环中去反复检查是否满足各个action的条件，如果某个action的条件满足就会去执行对应的process。&lt;/p>
&lt;p>&amp;lt;4&amp;gt;配置
vi命令打开inittab模板文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">#first:run the system script file 注释
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">::sysinit:/etc/init.d/rcS //在控制台初始化之前执行rcS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">::askfirst:-/bin/sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">::ctrlaltdel:-/sbin/reboot //执行控制台时的打印信息
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#umount all filesystem //同时按住3键可以重启
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">::shutdown:/bin/umount -a -r//关机时接触挂载init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#restart init process//重启时启动
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">::restart:/sbin/init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>修改脚本：
&lt;img src="https://img-blog.csdnimg.cn/0ccb3db4d10c417b9eeb5526f87c7793.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="在这里插入图片描述"
>&lt;/p>
&lt;h4 id="2rcs文件详解">2.rcS文件详解
&lt;/h4>&lt;p>&amp;lt;1&amp;gt;添加一个典型的rcS文件到etc目录下&lt;/p>
&lt;p>&lt;a class="link" href="https://download.csdn.net/download/qq_56914146/85219254" target="_blank" rel="noopener"
>rcS下载&lt;/a>&lt;/p>
&lt;p>&amp;lt;2&amp;gt;rcS文件解析&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/sh 需要继续添加环境变量，在后面：/new 即可
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>/sbin:/bin:/usr/sbin:/usr/bin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">runlevel&lt;/span>&lt;span class="o">=&lt;/span>S
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">prevlevel&lt;/span>&lt;span class="o">=&lt;/span>N
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">umask&lt;/span> &lt;span class="m">022&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> PATH runlevel prevlevel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mount -a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>PATH=xxx&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>PATH这个环境变量是linux系统内部定义的一个环境变量，含义是操作系统去执行程序时会默认到PATH指定的各个目录下去寻找。如果找不到就认定这个程序不存在，如果找到了就去执行它。将一个可执行程序的目录导出到PATH，可以让我们不带路径来执行这个程序。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>runlevel=&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>linux操作系统自从开始启动至启动完毕需要经历几个不同的阶段，这几个阶段就叫做runlevel。例如init 0就是关机，init 6 就是重启&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/2c17661c32464ad8a0c96c654e622289.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>umask=&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>umask是linux的一个命令，作用是设置linux系统的umask值,而umask值决定当前用户在创建文件时的默认权限。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>mount -a&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>mount -a是挂载所有的应该被挂载的文件系统，在busybox中mount -a时busybox会去查找一个文件/etc/fstab文件，这个文件按照一定的格式列出来所有应该被挂载的文件系统（包括了虚拟文件系统）&lt;/p>
&lt;/blockquote>
&lt;h4 id="3rcs实战">3.rcS实战
&lt;/h4>&lt;p>首先将前面提供的etc压缩包模板下载至共享文件夹&lt;/p>
&lt;p>&amp;lt;1&amp;gt;输入命令打开rcS脚本：&lt;code>vi etc/init.d/rcS&lt;/code>。我们可以发现在每一行代码的后面都有一个^m，将其删除，这样开发板启动的时候就不会报错了&lt;/p>
&lt;p>&amp;lt;2&amp;gt;mdev&lt;/p>
&lt;blockquote>
&lt;p>udev/mdev的工作就是配合linux驱动生成相应的/dev目录下的设备文件。&lt;/p>
&lt;/blockquote>
&lt;p>rcS文件中没有启动mdev的时候，ls查看/dev目录下启动后是空的；在&lt;code>rcS&lt;/code>文件中添加以下与mdev有关的2行配置项后：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">echo /sbin/mdev &amp;gt; /proc/sys/kernel/hotplug
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mdev -s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://img-blog.csdnimg.cn/d84ea4a6677a4af08741ba6c4b6db580.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="在这里插入图片描述"
>&lt;/p>
&lt;p>再次启动系统后发现/dev目录下生成了很多的设备驱动文件&lt;/p>
&lt;p>&amp;lt;3&amp;gt;hostname&lt;/p>
&lt;p>&lt;code>我们进入etc目录下创建一个名为sysconfig的文件夹，并在该目录下再次touch创建一个名为HOSTNAME的文件，vi命令进入可修改当前系统主机名&lt;/code>&lt;/p>
&lt;p>hostname是linux中的一个shell命令。hostname xxx执行后可以设置当前主机名为xxx ，直接hostname不加参数可以显示当前系统的主机名。&lt;/p>
&lt;ul>
&lt;li>添加profile文件(该文件在前面etc提供的模板文件有)后，即可显示用户名和hostname&lt;/li>
&lt;/ul>
&lt;p>&amp;lt;4&amp;gt;ifconfig&lt;/p>
&lt;p>(1)有时候我们希望开机后进入命令行时ip地址就是一个指定的ip地址（譬如192.168.240.40），这时候就可以在rcS文件中ifconfig eth0 192.168.240.40&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/5842d7cc0dd94c3fbd348189e908f09b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="在这里插入图片描述"
>&lt;/p>
&lt;p>&amp;lt;5&amp;gt;mount挂载测试&lt;/p>
&lt;p>这时候我们在secureCRT中启动开发板，可以发现还是存在一些报错，例如&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">mount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">mounting&lt;/span> &lt;span class="n">tmpfs&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span> &lt;span class="n">failed&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">No&lt;/span> &lt;span class="n">such&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">directory&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">mount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">mounting&lt;/span> &lt;span class="n">tmpfs&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">tmp&lt;/span> &lt;span class="n">failed&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">No&lt;/span> &lt;span class="n">such&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">directory&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">mount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">mounting&lt;/span> &lt;span class="n">tmpfs&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">dev&lt;/span> &lt;span class="n">failed&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">No&lt;/span> &lt;span class="n">such&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">directory&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">......&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这是由于我们的之前创建的根目录挂载文件中没有创建这些文件，&lt;code>输入mkdir命令在根目录依次创建即可&lt;/code>。&lt;/p>
&lt;h2 id="七动态链接库的拷贝">七、动态链接库的拷贝
&lt;/h2>&lt;h4 id="1静态编译链接测试">1.静态编译链接测试
&lt;/h4>&lt;p>首先我们在开发板根目录下touch a.c文件，然后gcc编译一下它，可以发现在虚拟机中可以成功打印,但是在开发板端执行编译命令却并没有成功，这是因为在开发板中并没有交叉编译的相关文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">a.c file-&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#include&amp;lt;stdio.h&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">int main()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> printf(&amp;#34;hello world!\n&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="2解决办法">2.解决办法：
&lt;/h4>&lt;p>&lt;code>拷贝一份动态链接库文件到开发板根目录下&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cp lib/*so* /root/rootfs/x210_rootfs/lib/ -rdf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="3解释">3.解释:
&lt;/h4>&lt;p>&lt;img src="https://img-blog.csdnimg.cn/6e39e3914f954ff7967b904a8aa576c5.png"
loading="lazy"
>&lt;/p>
&lt;p>这时候执行命令./a.out发现可以正常打印&lt;/p>
&lt;h4 id="4strip工具">4.strip工具
&lt;/h4>&lt;p>动态链接库so文件中包含了调试符号信息，这些符号信息在运行时是没用的（调试时用的），这些符号会占用一定空间。在&lt;code>传统的嵌入式系统中flash空间是有限的&lt;/code>，为了&lt;code>节省空间&lt;/code>常常把这些符号信息去掉。这样节省空间并且不影响运行。&lt;/p>
&lt;p>去掉符号信息的命令：&lt;/p>
&lt;p>&lt;code>arm-linux-strip *so*&lt;/code>&lt;/p>
&lt;h2 id="八ext2格式镜像烧录">八、ext2格式镜像烧录
&lt;/h2>&lt;h4 id="1确定文件夹格式的rootfs可用">1. 确定文件夹格式的rootfs可用
&lt;/h4>&lt;p>前面我们已经提前配置好，此处不再赘述&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/560f47331e76495994c412e7f9e97425.png"
loading="lazy"
>&lt;/p>
&lt;h4 id="2ext2镜像制作">2.ext2镜像制作
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>首先我们在~/rootfs目录下mkdir ext2_rootfs创建用于我们的挂载目录。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>然后输入以下命令：&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dd if=/dev/zero of=rootfs.ext2 bs=1024 count=10240
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">losetup /dev/loop1 rootfs.ext2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mke2fs -m 0 /dev/loop1 10240
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mount -t ext2 /dev/loop1 ./ext2_rootfs/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>此时我们复制一份开发板根目录到ext2_rootfs下&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cp rootfs.ext2 /mnt/hgfs/Myshare/ -f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>进入~/rootfs目录，执行清除卸载命令&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">umount /dev/loop1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">losetup -d /dev/loop1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>此时在rootfs目录下可以看见生成了一个rootfs.ext2镜像文件，我们将其复制到共享文件夹下，然后再将其复制到电脑&lt;a class="link" href="https://blog.csdn.net/qq_56914146/article/details/124204098?spm=1001.2014.3001.5501" target="_blank" rel="noopener"
>fastboot&lt;/a>目录下,执行uboot烧录操作，借鉴该博客&lt;a class="link" href="https://blog.csdn.net/qq_56914146/article/details/124204098?spm=1001.2014.3001.5501" target="_blank" rel="noopener"
>【Linux系统开发】Study210开发板刷安卓系统&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>至此开发板根目录构建完成，其中也是遇到很多问题，也因此给自己挖了很多坑，然后又给自己填坑，虽然过程不尽人意，但是最后获得的都是自己的，大家在尝试这个实验的时候欢迎博客私信交流！&lt;/p>
&lt;hr>
&lt;p>参考资料：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://blog.csdn.net/wangweijundeqq/article/details/82533485?spm=1001.2014.3001.5502" target="_blank" rel="noopener"
>Linux开发之根文件系统构建及过程详解&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://blog.csdn.net/u010299133/article/details/93414146" target="_blank" rel="noopener"
>busybox init进程和/etc/inittab关系&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://blog.csdn.net/u010311609/article/details/123137181?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165080397516782184664736%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;amp;request_id=165080397516782184664736&amp;amp;biz_id=0&amp;amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-2-123137181.142%5ev9%5epc_search_result_control_group,157%5ev4%5econtrol&amp;amp;utm_term=NFS%E6%8C%82%E8%BD%BDlinux&amp;#43;&amp;amp;spm=1018.2226.3001.4187" target="_blank" rel="noopener"
>NFS-LINUX挂载实践&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Ubuntu命令查看手册</title><link>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91ubuntu-%E5%91%BD%E4%BB%A4%E6%9F%A5%E7%9C%8B%E6%9B%B4%E6%96%B0%E4%B8%AD/</link><pubDate>Mon, 25 Jul 2022 00:00:00 +0000</pubDate><guid>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91ubuntu-%E5%91%BD%E4%BB%A4%E6%9F%A5%E7%9C%8B%E6%9B%B4%E6%96%B0%E4%B8%AD/</guid><description>&lt;img src="https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91ubuntu-%E5%91%BD%E4%BB%A4%E6%9F%A5%E7%9C%8B%E6%9B%B4%E6%96%B0%E4%B8%AD/cover.jpg" alt="Featured image of post Ubuntu命令查看手册" />&lt;h2 id="进程管理类">进程管理类
&lt;/h2>&lt;p>1.top命令&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>top命令是一个常用的查看系统资源使用情况和查看占用系统资源最多的进程的命令。&lt;/li>
&lt;li>top以列形式显示所有的进程，占最多CPU资源的进程会显示在最上面。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>2.htop命令&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>htop命令是top的改进版。&lt;/li>
&lt;li>默认情况下，大多数Linux发行版本都没有安装htop。&lt;/li>
&lt;li>htop命令显示的信息与top相同，但它的界面更人性化。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>3.pstree&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>pstree命令也可以显示进程信息。&lt;/li>
&lt;li>它以树的形式显示进程。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>4.kill&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>kill命令可以根据进程ID来杀死进程。&lt;/li>
&lt;li>你可以使用ps -A，top，或者grep命令获取到进程ID。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;pre>&lt;code>从技术层面来讲，kill命令可以发送任何信号给一个进程。
你可以使用 kill -KILL [id] 或者 kill -9 [id] 来杀死顽固的进程。
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h2 id="文件操作类基础篇">文件操作类(基础篇)
&lt;/h2>&lt;blockquote>
&lt;p>&lt;strong>新建文件:touch&lt;/strong>&lt;br>
详细文档通过 man [command] 查看&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>管理文件&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>rm: 删除文件或目录（-r）&lt;/li>
&lt;li>mkdir 新建目录&lt;/li>
&lt;li>cp /home/jack/README.md /home/jack/work/ 拷贝文件或目录（-r）&lt;/li>
&lt;li>mv 移动或重命名文件、目录&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>压缩tzip文件&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>zip FileName.zip DirName # 将DirName本身压缩&lt;/li>
&lt;li>zip -r FileName.zip DirName # 压缩，递归处理，将指定目录下的所有文件和子目录一并压缩&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>解压zip文件&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>unzip filename&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>查找含&lt;code>spark&lt;/code>的目录、文件&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>find /home/jack -name &amp;lsquo;&lt;em>spark&lt;/em>&amp;rsquo;&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>更改密码&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>passwd&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>更改文件名或移动文件位置&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>语句：mv oldFileName newFileName&lt;/li>
&lt;li>示例：我想把 aaa.txt修改为 bbb.txt示例语句：mv aaa.txt bbb.txt&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>删除文件&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>删除文件: rm test.txt&lt;/li>
&lt;li>删除空文件夹: rmdir test&lt;/li>
&lt;li>删除非空文件夹及其目录下的所有文件夹及文件:rm -r test&lt;/li>
&lt;li>删除 除某个文件或文件夹之外的所有文件以及文件夹:rm -r (文件名称或文件夹名称)括号里可以放多个，用 | 分开，如rm -r (test | test.txt)&lt;/li>
&lt;/ul>
&lt;h2 id="防火墙状态">防火墙状态
&lt;/h2>&lt;p>首先需要输入安装命令：
&lt;code>apt install ufw&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>查看防火墙当前状态
&lt;code>sudo ufw status&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>开启防火墙
&lt;code>sudo ufw enable&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>关闭防火墙
&lt;code>sudo ufw disable&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>查看防火墙版本
&lt;code>sudo ufw version&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>默认允许外部访问本机
&lt;code>sudo ufw default allow&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>默认拒绝外部访问主机
&lt;code>sudo ufw default deny&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>允许外部访问443端口
&lt;code>sudo ufw allow 443&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>拒绝外部访问443端口
&lt;code>sudo ufw deny 443&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>允许某个IP地址访问本机所有端口
&lt;code>sudo ufw allow from 192.168.0.1&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h2 id="网络设置">网络设置
&lt;/h2>&lt;blockquote>
&lt;p>重置网卡
sudo /etc/init.d/networking restart&lt;/p>
&lt;/blockquote></description></item><item><title>Study210利用SD运行流水灯程序</title><link>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91study210%E5%88%A9%E7%94%A8sd%E8%BF%90%E8%A1%8C%E6%B5%81%E6%B0%B4%E7%81%AF%E7%A8%8B%E5%BA%8F/</link><pubDate>Sun, 24 Jul 2022 00:00:00 +0000</pubDate><guid>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91study210%E5%88%A9%E7%94%A8sd%E8%BF%90%E8%A1%8C%E6%B5%81%E6%B0%B4%E7%81%AF%E7%A8%8B%E5%BA%8F/</guid><description>&lt;img src="https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91study210%E5%88%A9%E7%94%A8sd%E8%BF%90%E8%A1%8C%E6%B5%81%E6%B0%B4%E7%81%AF%E7%A8%8B%E5%BA%8F/cover.jpg" alt="Featured image of post Study210利用SD运行流水灯程序" />&lt;h2 id="1安装ecilpse">1.安装ecilpse
&lt;/h2>&lt;h4 id="1确认自己的pc机开发环境开发板光盘中有如下四个eclipse包">（1）确认自己的PC机开发环境。开发板光盘中有如下四个eclipse包：
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">eclipse-kepler-for-arm-windows-x86_32.7z
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">eclipse-kepler-for-arm-windows-x86_64.7z
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">eclipse-kepler-for-arm-gtk-linux-x86_64.7z
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">eclipse-kepler-for-arm-gtk-linux-x86_32.7z
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>选择自己需求对应的安装包下载解压即可（&lt;a class="link" href="https://download.csdn.net/download/qq_56914146/85162554" target="_blank" rel="noopener"
>此处可点击下载&lt;/a>）&lt;/p>
&lt;h4 id="2配置好eclipse的环境变量">（2）配置好eclipse的环境变量
&lt;/h4>&lt;p>借鉴&lt;a class="link" href="https://blog.csdn.net/m0_46165586/article/details/107296429?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165018384616781685349830%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;amp;request_id=165018384616781685349830&amp;amp;biz_id=0&amp;amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-107296429.142%5ev9%5epc_search_result_control_group,157%5ev4%5econtrol&amp;amp;utm_term=eclipse%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE&amp;amp;spm=1018.2226.3001.4187" target="_blank" rel="noopener"
>Eclipse环境变量配置-超详细&lt;/a>&lt;/p>
&lt;h2 id="2开始工程的创建">2.开始工程的创建
&lt;/h2>&lt;h4 id="1首先双击eclipseexe文件进入初次进入需要选择一个存储位置作为工程存放处workplace">（1）首先双击eclipse.exe文件进入，初次进入需要选择一个存储位置作为工程存放处（workplace）
&lt;/h4>&lt;h4 id="2建一个流水灯工程">（2）建一个流水灯工程
&lt;/h4>&lt;p>首先在Project Explorer的空白栏右键单击-&amp;gt;New-&amp;gt;C Project
&lt;img src="https://img-blog.csdnimg.cn/0b37eba37269446faf5de58793963da2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="在这里插入图片描述"
>
项目名称填写LED_test
&lt;img src="https://img-blog.csdnimg.cn/0b7cce5b3fa341f98792a316a1937054.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="在这里插入图片描述"
>
点击next，finish&lt;/p>
&lt;p>找到我们的项目工程示例，将全部文件复制到剪贴板
&lt;img src="https://img-blog.csdnimg.cn/2bbe14f0a69a46fe8328ce92f1492421.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="在这里插入图片描述"
>
工程右键选择paste，选择粘贴全部
&lt;img src="https://img-blog.csdnimg.cn/842db416ea2c4929ac655d29bc4bfb07.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="在这里插入图片描述"
>
这是粘贴好的文件项目
&lt;img src="https://img-blog.csdnimg.cn/d1dae4dddaf346b1be377c674fefdd35.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="在这里插入图片描述"
>
工程右键Build Project或直接CTRL+B编译
&lt;img src="https://img-blog.csdnimg.cn/9389ca0a332143fdbfb650e41fb84f2b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="在这里插入图片描述"
>
此时回到我们存放工程的workplace文件目录下，可以发现生成了output文件目录
&lt;img src="https://img-blog.csdnimg.cn/776361da8d1045c3a39af79804bf0320.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="在这里插入图片描述"
>
进入该目录下，可以发现生成了led.bin映像文件
&lt;img src="https://img-blog.csdnimg.cn/e497619b0ab74765aaffd33dc55be299.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="在这里插入图片描述"
>&lt;/p>
&lt;h2 id="3下载源码到sd卡">3.下载源码到SD卡
&lt;/h2>&lt;p>打开SD卡烧写工具，将上面生成的映像文件下载到SD卡
&lt;img src="https://img-blog.csdnimg.cn/07008c13a27e41bebc960a47747c2283.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="在这里插入图片描述"
>&lt;/p>
&lt;h2 id="4实例演示">4.实例演示
&lt;/h2>&lt;h4 id="1清除开发板中的bootloader">（1）清除开发板中的bootloader
&lt;/h4>&lt;p>由于S5PV210芯片无法直接从SD2通道启动，首先会从SD0通道启动，而SD0通道接了emmc芯片，因此我们务必将emmc中已存在的bootloader破坏掉！(关于Windows下破坏板载BootLoader方法可借鉴&lt;a class="link" href="https://blog.csdn.net/qq_56914146/article/details/124204098?spm=1001.2014.3001.5501" target="_blank" rel="noopener"
>【Linux系统开发】Study210开发板刷安卓系统&lt;/a>)&lt;/p>
&lt;h4 id="2通过sd卡运行裸机程序">（2）通过SD卡运行裸机程序
&lt;/h4>&lt;p>将烧有裸机程序的SD卡插到Study210开发板上，长按POWER键，约3秒后即可松手，这时可以发现，四盏LED灯已经在来回闪烁了。
&lt;img src="https://img-blog.csdnimg.cn/ddcba636b89841629cc4eba87b6a90b2.gif"
loading="lazy"
alt="在这里插入图片描述"
>&lt;/p></description></item><item><title>Study210开发板刷安卓系统</title><link>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91study210%E5%BC%80%E5%8F%91%E6%9D%BF%E5%88%B7%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F/</link><pubDate>Sat, 23 Jul 2022 00:00:00 +0000</pubDate><guid>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91study210%E5%BC%80%E5%8F%91%E6%9D%BF%E5%88%B7%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F/</guid><description>&lt;img src="https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91study210%E5%BC%80%E5%8F%91%E6%9D%BF%E5%88%B7%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F/cover.jpg" alt="Featured image of post Study210开发板刷安卓系统" />&lt;h2 id="一破坏bootloader">一、破坏BootLoader
&lt;/h2>&lt;blockquote>
&lt;p>1.用USB转串口线连接电脑与开发板，打开SecureCRT串口监视软件（此步骤注意：开发板上使用UART2）&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/c79baf4eb1e949c88d6bb50c32862354.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="在这里插入图片描述"
>&lt;/p>
&lt;blockquote>
&lt;p>2.长按开发板POWER按键开机，进入控制台。(让secureCRT读完全部信息)&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>3.输入root（password:123456）&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>4.然后输入&lt;code>busybox dd if=/dev/zero of=/dev/mmcblk0 bs=512 seek=1 count=1 conv=sync&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>5.回车后显示&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">1+0 records in
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1+O records out
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>6.然后再输入 sync 命令 ，此时第1扇区已经破坏。
此时重新启动开发板就无法启动了&lt;/p>
&lt;/blockquote>
&lt;h2 id="二sd卡刷机烧录uboot到sd卡中">二、SD卡刷机(烧录uboot到SD卡中)
&lt;/h2>&lt;blockquote>
&lt;p>1.将SD卡插入到电脑的SD卡槽，使用SD卡烧录工具x210_Fusing_Tool 进行烧录。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/958a8cf2a0554edd8e2d53d021490d4e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
>&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->此处如果SD烧写不成功，可尝试用管理员身份运行。
&lt;code>插卡后，此软件会自动识别，然后在自己的电脑里选择一个uboot.bin文件。然后点击START.&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>2.完成后将SD卡插入开发板的SD卡槽。然后开机就可以进入uboot界面了。在uboot开机自动启动倒数3秒之内迅速按下电脑回车键，打断自动启动。（否则会自动启动iNand中的android）&lt;/p>
&lt;/blockquote>
&lt;h2 id="三fastboot-下载安装镜像">三、fastboot 下载安装镜像
&lt;/h2>&lt;blockquote>
&lt;p>1.用USB线的USB口 连接电脑，另一端连接开发板的OTG口，然后在SecureCRT 的uboot控制台输入fastboot命令，这时电脑会识别USB硬件，然后需要安装驱动。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>2.然后将电脑内的fastboot压缩包解压到一个容易找到的文件目录下，如 D盘。打开windows控制台进入到相应目录下。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/bc1cb6ad4904482baaad59e05da074bc.png"
loading="lazy"
alt="\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Wex7LBk8-1650028395333)(C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20220415202849623.png)\]"
>&lt;/p>
&lt;blockquote>
&lt;p>3.下一步 在fastboot文件夹下，新建一个文件夹存放要烧录的文件，如Android&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;code>fastboot目录下应该包含的文件&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/850cde9ff40e4109a2b46cd186f93418.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="在这里插入图片描述"
>&lt;/p>
&lt;blockquote>
&lt;p>&lt;code> Android中应该包含的文件（由于这里我烧写的是安卓系统）&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/d97c6282c3ba46aba3a44b34a72e99a4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-G3DezB8H-1650028395333)(C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20220415203108592.png)\]"
>&lt;/p>
&lt;blockquote>
&lt;p>4.进行内核和系统的烧写 ，具体代码如下：&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/eb401fcf50ec4f228025341cfcb28fca.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-9Dhso3IG-1650028395334)(C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20220415203639928.png)\]"
>&lt;/p>
&lt;blockquote>
&lt;p>同时在SecureCRT下可以看到下载结果&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>5.最后在windows控制台下输入&lt;code> fastboot reboot&lt;/code>命令重启系统即可。&lt;/p>
&lt;/blockquote>
&lt;h2 id="四dnw-刷机用fastboot刷android-">四、dnw 刷机(用fastboot刷Android )
&lt;/h2>&lt;ul>
&lt;li>准备事项：已安装好相应的驱动、串口线（连接的是UART2）和USB已经接好，dnw已打开。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/763acfc49ae34659b891a95ccd3de444.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-jaxHZTvW-1650028395335)(C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20220415204109660.png)\]"
>&lt;/p>
&lt;p>注意：&lt;/p>
&lt;p>（1）安装&lt;code>SecBulk.sys Njsmodi 2416 dnw drive&lt;/code>的驱动程序在&lt;code>\X210V3S_A\tools\USB驱动\dnw_driver&lt;/code>下,安装驱动需要禁用数字签名(可参考&lt;a class="link" href="https://blog.csdn.net/m0_37182543/article/details/80541418?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165002148616780271549615%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;amp;request_id=165002148616780271549615&amp;amp;biz_id=0&amp;amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-80541418.142%5ev9%5epc_search_result_cache,157%5ev4%5econtrol&amp;amp;utm_term=Windows%E7%A6%81%E7%94%A8%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D&amp;amp;spm=1018.2226.3001.4187" target="_blank" rel="noopener"
>win10如何永久关闭数字签名&lt;/a>)&lt;/p>
&lt;p>（2）在使用dnw过程中需要长按电源键，否则会断开连接。&lt;/p>
&lt;p>刷机步骤：&lt;/p>
&lt;blockquote>
&lt;p>1.将拨码开关拨到USB启动位置。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/51ddaa8b66494111899de8774b695007.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-rua1zZN3-1650028395335)(C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20220415205448252.png)\]"
>&lt;/p>
&lt;blockquote>
&lt;p>2.按住开机键(长按不放)，DNW 配置下载地址为0xd0020010 ，然后transmit x210_usb.bin&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/63fbc995f8ab4752945842db148ad6a5.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/170c0ec22ea4421daa7952994fdd3b0d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/e08d1f32d26d4558b078f85db271eab4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
>&lt;/p>
&lt;blockquote>
&lt;p>3.(&lt;code>同上操作&lt;/code>)DNW 修改下载地址为 0x23e00000 ，下载uboot.bin&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;code> 注意!!!&lt;/code>:下载的同时要看&lt;code>SecureCRT界面&lt;/code>，串口终端有信息打印出来，在3s倒计时内按下回车键，进入shell界面。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>4.回到secureCRT&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">输入fdisk -c 0 （进行分区）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">输入fastboot （查看分区）
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>5.cmd打开系统终端，切换到fastboot目录分别执行下列红框的命令：&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/7676539a597a42d38993936ee760236a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
>
&lt;code>最后再输入&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">fastboot -w
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>全部执行完成后，将拨码开关切换回原来的状态，重新启动，此次刷机完成。&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/2982435176bb485abd152c2ab508d2cc.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="在这里插入图片描述"
>&lt;/p>
&lt;hr>
&lt;p>此文章参考于&lt;a class="link" href="https://blog.csdn.net/madao1234/article/details/101104872" target="_blank" rel="noopener"
>S5PV210 Study210开发板刷系统&lt;/a>&lt;/p></description></item><item><title>ifconfig不显示ip地址</title><link>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91ifconfig%E4%B8%8D%E6%98%BE%E7%A4%BAip%E5%9C%B0%E5%9D%80/</link><pubDate>Fri, 22 Jul 2022 00:00:00 +0000</pubDate><guid>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91ifconfig%E4%B8%8D%E6%98%BE%E7%A4%BAip%E5%9C%B0%E5%9D%80/</guid><description>&lt;img src="https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91ifconfig%E4%B8%8D%E6%98%BE%E7%A4%BAip%E5%9C%B0%E5%9D%80/cover.jpg" alt="Featured image of post ifconfig不显示ip地址" />&lt;h4 id="ubuntu终端下命令ifconfig的问题解决">ubuntu终端下命令ifconfig的问题解决
&lt;/h4>&lt;blockquote>
&lt;p>问题一. ifconfig之后只显示lo,没有看到eth0
问题二. ifconfig之后显示eth0，但是没有显示静态IP地址，即无inet、地址、广播、掩码。
问题三. ping命令不能使用，因为dns还没设置，编辑/etc/resolv.conf，加上dns服务器地址。&lt;/p>
&lt;/blockquote>
&lt;h4 id="问题一ifconfig之后只显示lo没有看到eth0-">问题一：ifconfig之后只显示lo,没有看到eth0 ?
&lt;/h4>&lt;blockquote>
&lt;p>1.eth0设置不正确，导致无法正常启动，修改eth0配置文件就好
ubuntu 12.04的网络设置文件是/etc/network/interfaces，打开文件，会看到auto lo iface lo inet loopback
这边的设置是本地回路。在后面加上&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">iface eth0 inet static
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">address 192.168.1.230 //（ip地址）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">netmask 255.255.255.0 //（子网掩码）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gateway 192.168.1.1 //（网关）
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>其中eth0就是电脑的网卡，如果电脑有多块网卡，比如还会有eth1，都可以在这里进行设置。iface eth0 inet 设置为dhcp是动态获取IP，设置为static则用自定义的IP。这边要自定义IP地址，所以选择static选项。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>2.eth0被关了
输入命令行：ifconfig eth0 up #开启eth0&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h4 id="问题二ifconfig之后显示eth0但是没有显示inet地址广播掩码-">问题二：ifconfig之后显示eth0，但是没有显示“inet/地址/广播/掩码/ ”?
&lt;/h4>&lt;blockquote>
&lt;p>1.先用sudo dhclient eth0更新IP地址
2.然后运行sudo ifconfig eth0
3.reboot&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h4 id="问题三重启后ping命令不能使用因为dns还没设置编辑etcresolvconf加上dns服务器地址">问题三：重启后，ping命令不能使用，因为dns还没设置，编辑/etc/resolv.conf，加上dns服务器地址。
&lt;/h4>&lt;blockquote>
&lt;p>设置好后，如果直接ping &lt;a class="link" href="https://www.baidu.com" target="_blank" rel="noopener"
>www.baidu.com&lt;/a>会发现ping不通，因为dns还没设置，编辑/etc/resolv.conf，加上dns服务器地址。&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>nameserver 8.8.8.8
nameserver 8.8.4.4
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>这两个是Google提供的免费DNS服务器的IP地址&lt;/p>
&lt;/blockquote></description></item><item><title>x210开发板 虚拟驱动创建流程</title><link>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91-x210%E5%BC%80%E5%8F%91%E6%9D%BF-%E8%99%9A%E6%8B%9F%E9%A9%B1%E5%8A%A8%E5%88%9B%E5%BB%BA%E6%B5%81%E7%A8%8B%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%BF%9B%E5%86%85%E6%A0%B8/</link><pubDate>Fri, 22 Jul 2022 00:00:00 +0000</pubDate><guid>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91-x210%E5%BC%80%E5%8F%91%E6%9D%BF-%E8%99%9A%E6%8B%9F%E9%A9%B1%E5%8A%A8%E5%88%9B%E5%BB%BA%E6%B5%81%E7%A8%8B%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%BF%9B%E5%86%85%E6%A0%B8/</guid><description>&lt;img src="https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91-x210%E5%BC%80%E5%8F%91%E6%9D%BF-%E8%99%9A%E6%8B%9F%E9%A9%B1%E5%8A%A8%E5%88%9B%E5%BB%BA%E6%B5%81%E7%A8%8B%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%BF%9B%E5%86%85%E6%A0%B8/cover.jpg" alt="Featured image of post x210开发板 虚拟驱动创建流程" />&lt;h2 id="内核编译常用命令">内核编译常用命令
&lt;/h2>&lt;p>安装模块
&lt;code>lsmod module_test.ko&lt;/code>
创建设备文件
&lt;code>mknod /dev/test c 250 0&lt;/code>
查看设备状态
&lt;code>lsmod module_test.ko&lt;/code>
查看设备注册信息(分为字符设备和块设备)
&lt;code>cat /proc/devices&lt;/code>&lt;/p>
&lt;h2 id="知识补充">知识补充:
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span>&lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">static&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 注意：这里如果没有指定i值，则打印出来的是随机值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 如果定义一个静态变量而没有赋值，则打印默认为0
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="虚拟驱动创建流程">虚拟驱动创建流程
&lt;/h2>&lt;p>首先进入x210_bsp/kernel&lt;/p>
&lt;p>make menuconfig&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/783c09aa06cb4a83a4df08d76d31c447.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/dc736c9d0d2b4ceaaaffcd6f90a1a16a.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/1193fb6e02be4c52a1d5951b0236ff38.png"
loading="lazy"
>&lt;/p>
&lt;p>make -j4&lt;/p>
&lt;p>cp arch/arm/boot/zImage /tftpboot/ -f&lt;/p>
&lt;p>重启开发板查看开发板设备&lt;/p>
&lt;p>ls /sys/devices/platform/&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/f57e4a58658e4380967bbfa1c0813864.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/2f3b1acd43e740e68774ecbe2824ea2f.png"
loading="lazy"
>&lt;/p>
&lt;p>cd sys/class/leds&lt;/p>
&lt;p>led_test_4编写完成后&lt;/p>
&lt;p>编译不报错即可&lt;/p>
&lt;p>cd /root/x210_bsp/kernel/drivers/leds/&lt;/p>
&lt;p>cp /mnt/hgfs/Myshare/driver/led_test_4/leds-s5pv210.c ./&lt;/p>
&lt;p>vi Makefile-&amp;gt;&lt;/p>
&lt;p>&lt;code>obj-$(CONFIG_LEDS_S5PV210) += leds-s5pv210.o&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/b30ce84418064d24a4e01c96218834f2.png"
loading="lazy"
>&lt;/p>
&lt;p>vi Kconfig更改依赖（添加以下文件）&lt;/p>
&lt;p>&lt;code>config LEDS_S5PV210 tristate &amp;quot;LED Support for S5PV210&amp;quot; help This option enables support for on-chip LED drivers found on Marvell Semiconductor 88PM8606 PMIC.&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/43715e94bbcb4e8ab850492c919afc33.png"
loading="lazy"
>&lt;/p>
&lt;p>进入到x210_bsp/kernel&lt;/p>
&lt;p>执行make menuconfig&lt;/p>
&lt;p>可以发现生成了新的配置（Device Drivers-&amp;gt; LED_Support），使能这个&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/31b19678d8204209b05d62de54afd1d9.png"
loading="lazy"
>&lt;/p>
&lt;p>执行make编译&lt;/p>
&lt;p>&lt;code> cp arch/arm/boot/zImage /tftpboot/ -f&lt;/code>&lt;/p>
&lt;p>secureCRT：&lt;/p>
&lt;p>cd sys/class/leds&lt;/p>
&lt;p>进入LED1,执行&lt;/p>
&lt;p>echo 1 &amp;gt; brightness // 灯亮&lt;/p>
&lt;p>echo 0 &amp;gt; brightness //灯灭&lt;/p>
&lt;hr>
&lt;p>最后附上源代码：&lt;/p>
&lt;p>&lt;code>leds-s5pv210.c&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;linux/module.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;linux/init.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;linux/fs.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;asm/uaccess.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;mach/gpio-bank.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;mach/regs-gpio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;linux/ioport.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;asm/io.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;linux/cdev.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;linux/device.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;mach/gpio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;linux/leds.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define GPIO_LED1 S5PV210_GPJ0(3)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define GPIO_LED2 S5PV210_GPJ0(4)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define GPIO_LED3 S5PV210_GPJ0(5)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define X210_LED_OFF 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define X210_LED_ON 0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">struct&lt;/span> &lt;span class="n">led_classdev&lt;/span> &lt;span class="n">mydev1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">struct&lt;/span> &lt;span class="n">led_classdev&lt;/span> &lt;span class="n">mydev2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">struct&lt;/span> &lt;span class="n">led_classdev&lt;/span> &lt;span class="n">mydev3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">s5pv210_led1_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">led_classdev&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">led_cdev&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">enum&lt;/span> &lt;span class="n">led_brightness&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">KERN_INFO&lt;/span> &lt;span class="s">&amp;#34;s5pv210_led1_set&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">LED_OFF&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">gpio_set_value&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GPIO_LED1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">X210_LED_OFF&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">gpio_set_value&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GPIO_LED1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">X210_LED_ON&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">s5pv210_led2_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">led_classdev&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">led_cdev&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">enum&lt;/span> &lt;span class="n">led_brightness&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">KERN_INFO&lt;/span> &lt;span class="s">&amp;#34;s5pv210_led2_set&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">LED_OFF&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">gpio_set_value&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GPIO_LED2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">X210_LED_OFF&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">gpio_set_value&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GPIO_LED2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">X210_LED_ON&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">s5pv210_led3_set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">led_classdev&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">led_cdev&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">enum&lt;/span> &lt;span class="n">led_brightness&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">KERN_INFO&lt;/span> &lt;span class="s">&amp;#34;s5pv210_led3_set&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">LED_OFF&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">gpio_set_value&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GPIO_LED3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">X210_LED_OFF&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">gpio_set_value&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GPIO_LED3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">X210_LED_ON&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">__init&lt;/span> &lt;span class="nf">s5pv210_led_init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">ret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 申请GPIO
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">gpio_request&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GPIO_LED1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#34;led1_gpj0.3&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">KERN_ERR&lt;/span> &lt;span class="s">&amp;#34;gpio_request failed.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">gpio_direction_output&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GPIO_LED1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mydev1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;led1&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mydev1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">brightness&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mydev1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">brightness_set&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">s5pv210_led1_set&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">led_classdev_register&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">mydev1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ret&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">KERN_ERR&lt;/span> &lt;span class="s">&amp;#34;led_classdev_register failed.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">ret&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mydev2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;led2&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mydev2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">brightness&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mydev2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">brightness_set&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">s5pv210_led2_set&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">led_classdev_register&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">mydev2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ret&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">KERN_ERR&lt;/span> &lt;span class="s">&amp;#34;led_classdev_register failed.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">ret&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mydev3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;led3&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mydev3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">brightness&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mydev3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">brightness_set&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">s5pv210_led3_set&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">led_classdev_register&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">mydev3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ret&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">KERN_ERR&lt;/span> &lt;span class="s">&amp;#34;led_classdev_register failed.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">ret&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="n">__exit&lt;/span> &lt;span class="nf">s5pv210_led_exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">led_classdev_unregister&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">mydev1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">led_classdev_unregister&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">mydev2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">led_classdev_unregister&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">mydev3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">gpio_free&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GPIO_LED1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">gpio_free&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GPIO_LED2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">gpio_free&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GPIO_LED3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">module_init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s5pv210_led_init&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">module_exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s5pv210_led_exit&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">MODULE_LICENSE&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;GPL&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">MODULE_AUTHOR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;WYQ&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">MODULE_DESCRIPTION&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;module_test&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>Makefile&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#KERN_VER = $(shell uname -r)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#KERN_DIR = /lib/modules/$(KERN_VER)/build
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">KERN_DIR&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">x210_bsp&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">kernel&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">obj&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">leds&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">s5pv210&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">o&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nl">all&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">make&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">C&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">KERN_DIR&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">M&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="n">pwd&lt;/span>&lt;span class="err">`&lt;/span> &lt;span class="n">modules&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="nl">PHONY&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">clean&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nl">clean&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">make&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">C&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">KERN_DIR&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">M&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="n">pwd&lt;/span>&lt;span class="err">`&lt;/span> &lt;span class="n">modules&lt;/span> &lt;span class="n">clean&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>ubuntu彻底删除通过apt方式安装的程序</title><link>https://kurisaw.github.io/p/ubuntu%E5%BD%BB%E5%BA%95%E5%88%A0%E9%99%A4%E9%80%9A%E8%BF%87apt%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85%E7%9A%84%E7%A8%8B%E5%BA%8F/</link><pubDate>Sat, 16 Jul 2022 00:00:00 +0000</pubDate><guid>https://kurisaw.github.io/p/ubuntu%E5%BD%BB%E5%BA%95%E5%88%A0%E9%99%A4%E9%80%9A%E8%BF%87apt%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85%E7%9A%84%E7%A8%8B%E5%BA%8F/</guid><description>&lt;img src="https://kurisaw.github.io/p/ubuntu%E5%BD%BB%E5%BA%95%E5%88%A0%E9%99%A4%E9%80%9A%E8%BF%87apt%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85%E7%9A%84%E7%A8%8B%E5%BA%8F/cover.jpg" alt="Featured image of post ubuntu彻底删除通过apt方式安装的程序" />&lt;p>以删除apache2为例，其它程序也都是这么删&amp;hellip;&lt;br>
1.先通过apt删除程序和相关配置文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt-get --purge remove apache2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2.自动删除不使用的软件包&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt-get autoremove
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3.找出与apache2相关的程序&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dpkg --get-selections|grep apache2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>没有就不显示，如果有就删除这些相关的程序&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt-get --purge remove xxx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>4.查看apache2是否还有进程存在&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ps -ef |grep apache2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果有就杀掉&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo kill -9 8888 //后面接pid号码，用空格隔开
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>5.全局查找和apache2相关的文件，需要一定时间，稍等&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo find / -name apache2*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将找到的文件逐个删掉&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo rm -rf /usr/share/bash-completion/completions/apache2ctl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这样就彻底删除掉apache2了&lt;/p></description></item><item><title>ubuntu安装交叉编译工具链</title><link>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91ubuntu%E4%B8%8B%E5%AE%89%E8%A3%85%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E9%93%BE/</link><pubDate>Thu, 14 Jul 2022 00:00:00 +0000</pubDate><guid>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91ubuntu%E4%B8%8B%E5%AE%89%E8%A3%85%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E9%93%BE/</guid><description>&lt;img src="https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91ubuntu%E4%B8%8B%E5%AE%89%E8%A3%85%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E9%93%BE/cover.jpg" alt="Featured image of post ubuntu安装交叉编译工具链" />&lt;h1 id="ubuntu安装交叉编译工具链附避坑指南">ubuntu安装交叉编译工具链（附避坑指南）
&lt;/h1>&lt;blockquote>
&lt;p>1.打开Ubuntu，在终端进入/usr/local/目录下&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>cd /usr/local/
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>2.在local/目录下创建一个名为arm的文件夹&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>mkdir arm
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>3.在自己的共享文件夹下找到&lt;a class="link" href="https://download.csdn.net/download/qq_56914146/85094381" target="_blank" rel="noopener"
>arm-2009q3.tar.bz2&lt;/a>,并复制到之前创建的arm目录下&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>cp /mnt/hgfs/Myshare/arm-2009q3.tar.bz2 /usr/local/arm/
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>4.进入到arm目录下，解压该其中文件&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>cd /usr/local/arm
tar -jxvf arm-2009q3.tar.bz2
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>5.然后执行：&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>cd arm-2009q3/bin
./arm-none-linux-gnueabi-gcc -v
&lt;/code>&lt;/pre>
&lt;p>&lt;code>注意：&lt;/code>&lt;!-- raw HTML omitted -->这里如果输入&lt;code>./arm-none-linux-gnueabi-gcc -v&lt;/code>终端显示 ‘没有这样的文件存在’ ，这是因为在64位的系统下安装32位交叉编译工具链，会无法使用，所以我们需要安装32位库的支持&lt;/p>
&lt;pre>&lt;code>sudo apt-get install libc6:i386
&lt;/code>&lt;/pre>
&lt;p>&lt;!-- raw HTML omitted -->安装好了之后重新输入&lt;code>./arm-none-linux-gnueabi-gcc -v&lt;/code>
&lt;img src="https://img-blog.csdnimg.cn/b0660902aed64a88a257ed92b892b8f7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="在这里插入图片描述"
>
&lt;!-- raw HTML omitted -->操作成功！&lt;/p>
&lt;blockquote>
&lt;p>6.为了能让它其他目录中也可以这么操作，我们把它导出到环境变量中
打开配置文件&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>sudo vim /etc/profile
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>7.在vi界面末尾处加入&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>export PATH=$PATH:/usr/local/arm/arm-2009q3/bin
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>8.回到主目录，查看交叉编译工具是否可用&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>cd ~
source /etc/profile
&lt;/code>&lt;/pre>
&lt;p>&lt;code>注&lt;/code> &lt;!-- raw HTML omitted -->这里如果没有出现相关信息，切换root用户再次输入命令&lt;/p>
&lt;p>使用 &lt;code>echo $PATH&lt;/code>查看交叉编译链的安装路径是否加入了环境变量。
使用&lt;code>arm-linux-gnueabihf-gcc -v&lt;/code>测试交叉编译链是否好使&lt;/p>
&lt;blockquote>
&lt;p>9.建立一个符号链接，进入到/usr/local/arm/arm-2009q3/bin#目录下，vi新建一个[mk-arm-linux-.sh]脚本（文章最后可复制粘贴该脚本），然后输入命令：&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>chmod 777 mk-arm-linux-.sh
./mk-arm-linux-.sh
&lt;/code>&lt;/pre>
&lt;p>&lt;code>这里由于运行时报错，原因详见&lt;/code>&lt;a class="link" href="https://blog.csdn.net/LWJdear/article/details/79868551?ops_request_misc=&amp;amp;request_id=&amp;amp;biz_id=102&amp;amp;utm_term=bash:%20./mk-arm-linux-.sh:%20Perm&amp;amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-79868551.142%5ev7%5epc_search_result_control_group,157%5ev4%5econtrol&amp;amp;spm=1018.2226.3001.4187" target="_blank" rel="noopener"
>解决linux的-bash: ./xx.sh: Permission denied&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>ls查看，可以发现符号链接出现,到此，交叉编译链配置成功！&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/6dc86a581621467d8639643cc154877a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lul5pS-Xw==,size_20,color_FFFFFF,t_70,g_se,x_16"
loading="lazy"
alt="在这里插入图片描述"
>&lt;/p>
&lt;hr>
&lt;p>&lt;code>附件&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://download.csdn.net/download/qq_56914146/85094381" target="_blank" rel="noopener"
>arm-2009q3.tar.bz2&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>mk-arm-linux-.sh脚本文件&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-addr2line -s arm-linux-addr2line
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-ar -s arm-linux-ar
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-as -s arm-linux-as
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-c++ -s arm-linux-c++
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-c++filt -s arm-linux-c++filt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-cpp -s arm-linux-cpp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-g++ -s arm-linux-g++
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-gcc -s arm-linux-gcc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-gcc-4.4.1 -s arm-linux-gcc-4.4.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-gcov -s arm-linux-gcov
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-gdb -s arm-linux-gdb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-gdbtui -s arm-linux-gdbtui
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-gprof -s arm-linux-gprof
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-ld -s arm-linux-ld
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-nm -s arm-linux-nm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-objcopy -s arm-linux-objcopy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-objdump -s arm-linux-objdump
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-ranlib -s arm-linux-ranlib
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-readelf -s arm-linux-readelf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-size -s arm-linux-size
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-sprite -s arm-linux-sprite
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-strings -s arm-linux-strings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln arm-none-linux-gnueabi-strip -s arm-linux-strip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;p>&lt;code>有问题欢迎评论留言致信:&lt;/code>&lt;a class="link" href="https://blog.csdn.net/qq_56914146?type=blog" target="_blank" rel="noopener"
>blogs&lt;/a>&lt;/p></description></item><item><title>ubuntu桌面恢复（20.04）</title><link>https://kurisaw.github.io/p/ubuntu%E6%A1%8C%E9%9D%A2%E6%81%A2%E5%A4%8D20.04/</link><pubDate>Thu, 14 Jul 2022 00:00:00 +0000</pubDate><guid>https://kurisaw.github.io/p/ubuntu%E6%A1%8C%E9%9D%A2%E6%81%A2%E5%A4%8D20.04/</guid><description>&lt;img src="https://kurisaw.github.io/p/ubuntu%E6%A1%8C%E9%9D%A2%E6%81%A2%E5%A4%8D20.04/cover.jpg" alt="Featured image of post ubuntu桌面恢复（20.04）" />&lt;h3 id="恢复ubuntu2004默认桌面管理器">恢复ubuntu20.04默认桌面管理器
&lt;/h3>&lt;ul>
&lt;li>
&lt;ul>
&lt;li>
&lt;ul>
&lt;li>&lt;a class="link" href="#GDM_KDM_LightDM_SDDM_5" >一、GDM, KDM, LightDM, SDDM的区别和安装配置&lt;/a>&lt;/li>
&lt;li>
&lt;ul>
&lt;li>&lt;a class="link" href="#1GDMgnome_8" >1、GDM，gnome系列的图形管理器&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#2KDMSDDMKDE_17" >2、KDM,SDDM是KDE系列的图形管理器&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#3LightDM_27" >3、LightDM&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="#_37" >二、配置和切换&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#ubuntu2004_62" >三、恢复ubuntu20.04默认桌面管理器&lt;/a>&lt;/li>
&lt;li>
&lt;ul>
&lt;li>&lt;a class="link" href="#1_65" >1、打开终端，用管理员口令下载相关资源&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#2gnomeshell_71" >2、安装gnome-shell&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#3ubuntugnomedesktop_80" >3、安装ubuntu-gnome-desktop&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#4unitytweaktoolgnometweaktool_85" >4、安装unity-tweak-tool和gnome-tweak-tool&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#5_94" >5、安装完成后重启&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>起因：我是一个windows重度用户，实验室配置了Ubuntu服务器，我试图用远程桌面控制控制服务器的桌面。由于对Linux一窍不通，一顿乱改。结果虽然能&lt;a class="link" href="https://blog.csdn.net/irober/article/details/112608610" target="_blank" rel="noopener"
>远程控制桌面&lt;/a>了，可是原有的显示管理器被我更改了。原先跑的好好的深度学习代码也不能跑了，原先的桌面风格（&lt;strong>gnome图形管理器&lt;/strong>）也变成了我不喜欢的风格(&lt;strong>轻量级的LightDM&lt;/strong>)了，大家以后要慎重。&lt;br>
注意：我是个半吊子，仅供参考。&lt;/p>
&lt;h3 id="一gdm-kdm-lightdm-sddm的区别和安装配置">一、GDM, KDM, LightDM, SDDM的区别和安装配置
&lt;/h3>&lt;p>&lt;a class="link" href="https://blog.csdn.net/u014466109/article/details/105572470" target="_blank" rel="noopener"
>GDM, KDM, LightDM, SDDM的区别和安装配置&lt;/a>&lt;br>
&lt;strong>gdm3，kdm 和 lightdm&lt;/strong> 都是显示管理器。 它们提供图形化登录并处理用户身份验证。&lt;/p>
&lt;h4 id="1gdmgnome系列的图形管理器">1、GDM，gnome系列的图形管理器
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">apt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="n">gdm3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">apt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="n">remove&lt;/span> &lt;span class="n">gdm3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="2kdmsddm是kde系列的图形管理器">2、KDM,SDDM是KDE系列的图形管理器
&lt;/h4>&lt;p>kdm 是kde管理器的显示。 但在KDE5中，它被否决为 SDDM，它更适合作为显示管理器，因此在默认情况下，它是在屏幕。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">apt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="n">sddm&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">apt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="n">remove&lt;/span> &lt;span class="n">sddm&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="3lightdm">3、LightDM
&lt;/h4>&lt;p>LightDM用于显示管理器的规范解决方案。 它应该是轻量级的，默认情况下是 Ubuntu。Xubuntu和 Lubuntu。 它是可以配置的，有多种欢迎主题可用。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">apt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="n">lightdm&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">apt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="n">remove&lt;/span> &lt;span class="n">lightdm&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="二配置和切换">二、配置和切换
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">dpkg&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">reconfigure&lt;/span> &lt;span class="n">gdm3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>你可以在上述命令中使用管理器的名字代替 gdm3，可在它们之间进行选择。 必须重新启动才生效。&lt;/p>
&lt;p>要检查当前正在使用的显示管理器，请运行以下命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cat&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">X11&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">default&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">display&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">manager&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Lightdm，gdm3和KDM都是针对linux的图形化登录。 Lightdm是Ubuntu的默认版本。 要在显示管理器之间进行 switch，请使用以下命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">dpkg&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">reconfigure&lt;/span> &lt;span class="n">lightdm&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Lightdm，gdm3和KDM都是针对linux的图形化登录。 Lightdm是Ubuntu的默认版本。 要在显示管理器之间进行 switch，请使用以下命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">dpkg&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">reconfigure&lt;/span> &lt;span class="n">lightdm&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>GDM(GNOME Display Manager)，LightDM(Light Display Manager) 和 KDM(KDE Display Manager) 是为不同版本的Ubuntu配置的管理器。 他们帮助启动X 服务器。用户会话和欢迎( 登录屏幕)。 你可以运行 sudo dpkg-reconfigure gdm 以在 lightdm。gdm和KDM之间进行更改。 安装它们就像 sudo apt-get install ( 显示manger将被 kdm，gdm 和 lightdm 替换。&lt;/p>
&lt;h3 id="三恢复ubuntu2004默认桌面管理器">三、恢复ubuntu20.04默认桌面管理器
&lt;/h3>&lt;p>&lt;a class="link" href="https://www.zhihu.com/tardis/sogou/art/27659651" target="_blank" rel="noopener"
>恢复ubuntu20.04默认桌面管理器&lt;/a>&lt;br>
目前Ubuntu的主流桌面&lt;strong>GNOME&lt;/strong>， Ubntu的内置桌面是&lt;strong>Untiy&lt;/strong>&lt;/p>
&lt;h4 id="1打开终端用管理员口令下载相关资源">1、打开终端，用管理员口令下载相关资源
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Ctrl&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">Alt&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">T&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>打开终端，用管理员口令下载相关资源&lt;/p>
&lt;h4 id="2安装gnome-shell">2、安装gnome-shell
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">apt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="n">gnome&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">shell&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;p>管理员权限需要输入密码，但是系统不会显示你输入的密码&lt;br>
输入完成后，直接回车即可&lt;/p>
&lt;h4 id="3安装ubuntu-gnome-desktop">3、安装ubuntu-gnome-desktop
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">apt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="n">ubuntu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">gnome&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">desktop&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="4安装unity-tweak-tool和gnome-tweak-tool">4、安装unity-tweak-tool和gnome-tweak-tool
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">apt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="n">unity&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tweak&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tool&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">apt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="n">gnome&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tweak&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tool&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="5安装完成后重启">5、安装完成后重启
&lt;/h4>&lt;p>然后一切恢复如初，仿佛没发生过。&lt;/p></description></item><item><title>x11vnc安装与配置</title><link>https://kurisaw.github.io/p/x11vnc%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</link><pubDate>Thu, 14 Jul 2022 00:00:00 +0000</pubDate><guid>https://kurisaw.github.io/p/x11vnc%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</guid><description>&lt;img src="https://kurisaw.github.io/p/x11vnc%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/cover.jpg" alt="Featured image of post x11vnc安装与配置" />&lt;h1 id="1-安装x11vnc">1. 安装x11vnc
&lt;/h1>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt-get install x11vnc -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>直接安装成功。&lt;/p>
&lt;h1 id="2-设置vnc密码">2. 设置vnc密码
&lt;/h1>&lt;p>密码存储在/etc/目录里面&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo x11vnc -storepasswd /etc/x11vnc.pass
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>放在这个位置，需要设置文件读取权限&lt;br>
否则会提示密码校验失败&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo chmod &lt;span class="m">777&lt;/span> /etc/x11vnc.pass
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="3创建vnc配置文件">3.创建vnc配置文件
&lt;/h1>&lt;p>在/etc/init 下创建一个x11vnc.conf的文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">cd&lt;/span> /etc/init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sudo gedit x11vnc.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>文件内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#description &amp;#34;xiaoqiang vnc server&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#start on runlevel [2345]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#stop on runlevel [06]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#script&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">exec&lt;/span> /usr/bin/x11vnc -auth guess -capslock -forever -loop -noxdamage -repeat -rfbauth /etc/x11vnc.pass -rfbport &lt;span class="m">5900&lt;/span> -shared
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#end script&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我的密码创建在/etc目录下，可以直接复制这段，不需要按照别人博客的修改成自己的，这里用的5900端口，也可以自己换成其他的。&lt;/p>
&lt;h1 id="4启动vnc服务">4.启动vnc服务
&lt;/h1>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> /etc/init/x11vnc.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://img-blog.csdnimg.cn/12b8d37ebfbb4160a7d50196cf3bd2b7.png"
loading="lazy"
alt="在这里插入图片描述"
>&lt;br>
启动了VNC和X11服务，端口号为5902，我这里用的5902，5900和5901被我分给其他的了&lt;/p>
&lt;h1 id="5设置自启动">5.设置自启动
&lt;/h1>&lt;p>我直接添加开机启动项没有成功，又写了一个脚本，将脚本添加到开机启动项才成功了。&lt;/p>
&lt;h2 id="1首先编写一个脚本">(1)首先编写一个脚本
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">gedit x11vnc.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>添加以下内容&lt;br>
第一行是要添加的解释器，后面是要执行的指令内容&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="nb">source&lt;/span> /etc/init/x11vnc.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>防止误删，从home移动到/etc/init.d/文件夹中&lt;br>
并添加权限&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo mv x11vnc.sh /etc/init.d/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo chmod &lt;span class="m">777&lt;/span> /etc/init.d/x11vnc.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="2添加启动项">(2)添加启动项
&lt;/h2>&lt;p>点开ubuntu的显示所有应用程序，左下角9个点，找到启动应用程序打开,图中第二行第5个。&lt;br>
&lt;img src="https://img-blog.csdnimg.cn/b1f7234307b64d9ca6844704a100a243.png"
loading="lazy"
alt="在这里插入图片描述"
>&lt;br>
点击右侧添加，添加自动启动项。&lt;br>
&lt;img src="https://img-blog.csdnimg.cn/fd2f7303980f4e7598e7f4ce6950ef20.png"
loading="lazy"
alt="在这里插入图片描述"
>&lt;br>
添加内容如下；重要的是第二行，&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bash /etc/init.d/x11vnc.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>用bash启动才能成功，保存之后重启，确实可以开机自启了。&lt;br>
&lt;img src="https://img-blog.csdnimg.cn/caa1005977844d8baffbba60e7d6ea93.png"
loading="lazy"
alt="在这里插入图片描述"
>&lt;/p>
&lt;h1 id="6x11vnc配置安装虚拟显卡驱动">6.x11vnc配置（安装虚拟显卡驱动）
&lt;/h1>&lt;p>如果你没有实时使用显示器而又想通过vnc远程查看桌面的话，可以考虑安装虚拟显卡驱动，唯一的缺点就是配置好后显示器那边可能无法正常显示&lt;/p>
&lt;h2 id="1首先还是安装命令">(1)首先还是安装命令
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt-get install xserver-xorg-video-dummy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="2接下来就是创建配置文件-etcx11xorgconf">(2)接下来就是创建配置文件 &lt;code>/etc/X11/xorg.conf&lt;/code>
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Section &amp;#34;Device&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Identifier &amp;#34;Dummy&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Driver &amp;#34;dummy&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> VideoRam 64000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Option &amp;#34;IgnoreEDID&amp;#34; &amp;#34;true&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Option &amp;#34;NoDDC&amp;#34; &amp;#34;true&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EndSection
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Section &amp;#34;Monitor&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Identifier &amp;#34;Monitor&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizSync 15.0-100.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> VertRefresh 15.0-200.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EndSection
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Section &amp;#34;Screen&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Identifier &amp;#34;Screen&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Monitor &amp;#34;Monitor&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Device &amp;#34;Dummy&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DefaultDepth 24
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SubSection &amp;#34;Display&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Depth 24
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Modes &amp;#34;1280x720&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> EndSubSection
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EndSection
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="3再修改个文件加点配置">(3)再修改个文件加点配置
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">vi /boot/firmware/usercfg.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">framebuffer_width=1280
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">framebuffer_height=720
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>如果想要恢复显示器的连接，可以先使用ssh访问终端并将&lt;code>/etc/X11/xorg.conf&lt;/code>这个文件删除，再次重启即可&lt;/strong>&lt;/p></description></item><item><title>多线程技术学习（基于Linux）</title><link>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/</link><pubDate>Tue, 22 Mar 2022 00:00:00 +0000</pubDate><guid>https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/</guid><description>&lt;img src="https://kurisaw.github.io/p/linux%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/cover.jpg" alt="Featured image of post 多线程技术学习（基于Linux）" />&lt;h2 id="1linux多线程概念">1.Linux多线程概念
&lt;/h2>&lt;blockquote>
&lt;p>&lt;strong>（1）线程：指运行中的程序的调度单位。&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>（2）多线程的优点：&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>运行与一个线程中的多个线程，他们彼此之间使用&lt;strong>相同的地址空间&lt;/strong>，&lt;strong>共享大部分数据&lt;/strong>，启动一个线程所花费的空间远远小于启动一个进程所花费的空间，并且，线程见彼此切换所需要的时间也远远小于进程间切换所需要的时间。&lt;/li>
&lt;li>进程间方便的通信机制。对不同的进程来说，它们有独立的数据空间，要进行数据的传递智能通过通信的方式&lt;/li>
&lt;li>应用程序响应速度提高&lt;/li>
&lt;li>使多CPU系统更加高效&lt;/li>
&lt;li>改善程序结构&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>（3）线程的生命周期&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>就绪-&amp;gt;运行-&amp;gt;阻塞-&amp;gt;终止&lt;/p>
&lt;hr>
&lt;h2 id="2linux线程实现">2.linux线程实现
&lt;/h2>&lt;blockquote>
&lt;p>&lt;strong>（1）线程创建&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>头文件包含
#include &amp;lt;pthread.h&amp;gt;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>定义函数：&lt;/p>
&lt;pre>&lt;code> int pthread_create(pthread_t *restrict tidp,const pthread_attr_t *restrict attr, void *(*start_rtn)(void),void *restrict arg)
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>函数说明：
tidp：线程id
attr：线程属性(通常为空)
start_rtn：线程要执行的函数 &lt;br>
arg： start_rtn的参数&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>（2）线程退出&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>头文件包含：
#include &amp;lt;pthread.h&amp;gt;&lt;/li>
&lt;li>定义函数：
void pthread_exit(void * rval_ptr)&lt;/li>
&lt;li>功能：终止调用线程Rval_ptr:线程退出返回值的指针。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>（3）线程等待&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>头文件包含：
#include &amp;lt;pthread.h&amp;gt;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>定义函数：&lt;/p>
&lt;pre>&lt;code> int pthread_join(pthread_t tid,void **rval_ptr)
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>功能：阻塞调用线程，直到指定的线程终止。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>函数说明：
Tid :等待退出的线程id
Rval_ptr：线程退出的返回值的指针&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>（4）线程标识获取&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>头文件包含：
#include &amp;lt;pthread.h&amp;gt;&lt;/li>
&lt;li>定义函数：
pthread_t pthread_self(void)&lt;/li>
&lt;li>功能：获取调用线程的 thread identifier&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>（5）线程清除&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>头文件包含：
#include &amp;lt;pthread.h&amp;gt;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>定义函数：&lt;/p>
&lt;pre>&lt;code> void pthread_cleanup_push(void (*rtn)(void *),void *arg)
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>功能：将清除函数压入清除栈&lt;/p>
&lt;/li>
&lt;li>
&lt;p>函数说明：
Rtn:清除函数
Arg:清除函数的参数&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="3线程同步的方法">3.线程同步的方法
&lt;/h2>&lt;p>进行多线程编程，因为无法知道哪个线程会在哪个时候对共享资源进行操作，因此让如何保护共享资源变得复杂，通过下面这些技术的使用，可以解决线程之间对资源的竞争：&lt;/p>
&lt;blockquote>
&lt;p>互斥量（互斥锁）Mutex
信号灯（信号量）Semaphore
条件变量Conditions&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="4线程的互斥">4.线程的互斥
&lt;/h2>&lt;p>线程在取出头节点前必须要等待互斥量，如果此时有其他线程已经获得该互斥量，那么该线程将会阻塞在这里。只有等到其他线程释放掉该互斥量后，该线程才有可能得到该互斥量。互斥量从本质上说就是一把锁, 提供对共享资源的保护访问。&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>（1）创建&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>在Linux中, 互斥量使用类型pthread_mutex_t表示。在使用前, 要对它进行初始化:&lt;/p>
&lt;ul>
&lt;li>对于静态分配的互斥量, 可以把它设置为默认属性的mutex对象PTHREAD_MUTEX_INITIALIZER&lt;/li>
&lt;li>对于动态分配的互斥量, 在申请内存(malloc)之后, 通过pthread_mutex_init进行初始化, 并且在释放内存(free)前需要调用pthread_mutex_destroy。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>函数使用：
头文件：
#include &amp;lt;pthread.h&amp;gt;&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>int pthread_mutex_init(pthread_mutex_t *restrict mutex, const pthread_mutexattr_t *restric attr)
int pthread_mutex_destroy(pthread_mutex_t *mutex)
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>&lt;strong>（2）加锁&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>对共享资源的访问, 要使用互斥量进行加锁, 如果互斥量已经上了锁, 调用线程会阻塞, 直到互斥量被解锁。&lt;/p>
&lt;blockquote>
&lt;p>函数使用：&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>int pthread_mutex_lock(pthread_mutex_t *mutex)
int pthread_mutex_trylock(pthread_mutex_t *mutex)
&lt;/code>&lt;/pre>
&lt;p>返回值: 成功则返回0, 出错则返回错误编号.
注意：trylock是非阻塞调用模式, 如果互斥量没被锁住, trylock函数将对互斥量加锁, 并获得对共享资源的访问权限; 如果互斥量被锁住了, trylock函数将不会阻塞等待而直接返回EBUSY, 表示共享资源处于忙状态。&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>（3）解锁&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>在操作完成后，必须给互斥量解锁，也就是前面所说的释放。这样其他等待该锁的线程才有机会获得该锁，否则其他线程将会永远阻塞。&lt;/p>
&lt;pre>&lt;code>int pthread_mutex_unlock(pthread_mutex_t *mutex)
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h2 id="5互斥pk信号量">5.互斥PK信号量
&lt;/h2>&lt;blockquote>
&lt;p>Mutex是一把钥匙，一个人拿了就可进入一个房间，出来的时候把钥匙交给队列的第一个。
Semaphore是一件可以容纳N人的房间，如果人不满就可以进去，如果人满了，就要等待有人出来。对于N=1的情况，称为binary semaphore。
Binary semaphore与Mutex的差异：&lt;/p>
&lt;ol>
&lt;li>mutex要由获得锁的线程来释放（谁获得，谁释放）。而semaphore可以由其它线程释放&lt;/li>
&lt;li>初始状态可能不一样：mutex的初始值是1 ,而semaphore的初始值可能是0（或者为1）。&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="6信号量操作代码演示">6.信号量操作（代码演示）
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">#include&amp;lt;stdio.h&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#include&amp;lt;string.h&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#include&amp;lt;pthread.h&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#include&amp;lt;stdlib.h&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#include&amp;lt;semaphore.h&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//子线程处理
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">char buf[200];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sem_t sem;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">int flag;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">void *func(void *arg)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sem_wait(&amp;amp;sem); // 接收信号量
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> /*
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Sem_wait()递减(锁定)sem指向的信号量。如果信号量的值大于0，则继续递减，函数立即返回。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 如果信号量当前的值为0，那么调用就会阻塞，直到信号量可以递减(即信号量的值高于0)，或者信号处理程序中断调用。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //while(strncmp(buf,&amp;#34;end&amp;#34;,3) != 0)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> while(flag == 0)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> printf(&amp;#34;input %d char.\n&amp;#34;,strlen(buf));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> memset(buf,0,sizeof(buf));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pthread_exit(NULL);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">int main(void)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> int ret = -1;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pthread_t th = -1;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sem_init(&amp;amp;sem,0,0); // 在sem指向的地址处初始化未命名的信号量
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ret = pthread_create(&amp;amp;th,NULL,func,NULL); //pthread_create()函数在调用进程中启动一个新线程,创建成功返回0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if(ret != 0)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> printf(&amp;#34;pthread_create error.\n&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return -1;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> printf(&amp;#34;please input string,end with Enter.\n&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> while(scanf(&amp;#34;%s&amp;#34;,buf))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if(!strncmp(buf,&amp;#34;end&amp;#34;,3))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> printf(&amp;#34;process end\n&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> flag = 1;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sem_post(&amp;amp;sem); //增加（解锁）sem指向的信号量
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> break;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> printf(&amp;#34;input %d char .\n&amp;#34;,strlen(buf));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> memset(buf,0,sizeof(buf));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> printf(&amp;#34;wait reclaim child thread.\n&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ret = pthread_join(th,NULL);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if(ret != 0)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> printf(&amp;#34;pthread_join error.\n&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> exit(-1);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> printf(&amp;#34;reclaim child thread successfully.\n&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;h2 id="7互斥操作函数演示">7.互斥操作（函数演示）
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">#include&amp;lt;stdio.h&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#include&amp;lt;string.h&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#include&amp;lt;pthread.h&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#include&amp;lt;stdlib.h&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//子线程处理
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">char buf[200];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pthread_mutex_t mutex;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">int flag;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">void *func(void *arg)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sleep(1);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> while(flag == 0)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pthread_mutex_lock(&amp;amp;mutex);// 互斥加锁
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> printf(&amp;#34;input %d char.\n&amp;#34;,strlen(buf));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> memset(buf,0,sizeof(buf));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pthread_mutex_unlock(&amp;amp;mutex); // 解锁
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pthread_exit(NULL);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">int main(void)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> int ret = -1;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pthread_t th = -1;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pthread_mutex_init(&amp;amp;mutex,NULL);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ret = pthread_create(&amp;amp;th,NULL,func,NULL); //pthread_create()函数在调用进程中启动一个新线程,创建成功返回0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if(ret != 0)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> printf(&amp;#34;pthread_create error.\n&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return -1;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> printf(&amp;#34;please input string,end with Enter.\n&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> while(1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pthread_mutex_lock(&amp;amp;mutex);// 对互斥对象加锁锁定
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> scanf(&amp;#34;%s&amp;#34;,buf);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pthread_mutex_unlock(&amp;amp;mutex); // 输入后解锁
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if(!strncmp(buf,&amp;#34;end&amp;#34;,3))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> printf(&amp;#34;process end\n&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> flag = 1;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> break;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> printf(&amp;#34;input %d char .\n&amp;#34;,strlen(buf));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> memset(buf,0,sizeof(buf));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> printf(&amp;#34;wait reclaim child thread.\n&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ret = pthread_join(th,NULL); //pthread_join()函数等待由thread指定的线程结束。如果该线程已经终止，则pthread_join()立即返回。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if(ret != 0)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> printf(&amp;#34;pthread_join error.\n&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> exit(-1);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> printf(&amp;#34;reclaim child thread successfully.\n&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pthread_mutex_destroy(&amp;amp;mutex);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;h2 id="8条件变量代码演示">8.条件变量（代码演示）
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#include&amp;lt;stdio.h&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#include&amp;lt;string.h&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#include&amp;lt;pthread.h&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#include&amp;lt;stdlib.h&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span>&lt;span class="err">子线程处理&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">char&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">pthread_mutex_t&lt;/span> &lt;span class="n">mutex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">pthread_cond_t&lt;/span> &lt;span class="n">cond&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="ne">int&lt;/span> &lt;span class="n">flag&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="k">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pthread_mutex_lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">mutex&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="o">//&lt;/span> &lt;span class="err">互斥加锁&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pthread_cond_wait&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">cond&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">NULL&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="o">//&lt;/span> &lt;span class="err">线程同步等待&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;input &lt;/span>&lt;span class="si">%d&lt;/span>&lt;span class="s2"> char.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">strlen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">memset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pthread_mutex_unlock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">mutex&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="err">解锁&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pthread_exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="ne">int&lt;/span> &lt;span class="n">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">void&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ne">int&lt;/span> &lt;span class="n">ret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pthread_t&lt;/span> &lt;span class="n">th&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pthread_mutex_init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">mutex&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pthread_cond_init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">cond&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">NULL&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="o">//&lt;/span>&lt;span class="err">初始化条件变量&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pthread_create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">th&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">func&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">NULL&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="o">//&lt;/span>&lt;span class="n">pthread_create&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="err">函数在调用进程中启动一个新线程&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err">创建成功返回&lt;/span>&lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ret&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;pthread_create error.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;please input string,end with Enter.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">scanf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pthread_cond_signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">cond&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="o">//&lt;/span> &lt;span class="err">发送信号&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">strncmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;end&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;process end&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;input &lt;/span>&lt;span class="si">%d&lt;/span>&lt;span class="s2"> char .&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">strlen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">memset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;wait reclaim child thread.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pthread_join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">th&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">NULL&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="o">//&lt;/span>&lt;span class="n">pthread_join&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="err">函数等待由&lt;/span>&lt;span class="n">thread指定的线程结束&lt;/span>&lt;span class="err">。如果该线程已经终止，则&lt;/span>&lt;span class="n">pthread_join&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="err">立即返回。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ret&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;pthread_join error.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;reclaim child thread successfully.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pthread_mutex_destroy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">mutex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pthread_cond_destroy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">cond&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="o">//&lt;/span> &lt;span class="err">条件变量销毁&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item></channel></rss>